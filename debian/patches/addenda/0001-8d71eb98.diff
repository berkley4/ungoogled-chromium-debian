From 8d71eb98bcc2bcb394444d63f75d00f5f0d12e92 Mon Sep 17 00:00:00 2001
From: Jiahe Zhang <jiahe.zhang@intel.com>
Date: Wed, 15 May 2024 12:58:54 +0000
Subject: [PATCH] [M125] Avoid using nullptr for cursor buffer

There might be cases that NextCursorBuffer() cannot find a suitable
buffer fitting the incoming cursor image size. This CL uses the max
buffer supported instead of nullptr to avoid crashes.

(cherry picked from commit 6805fa908aa505467642bf157bfca32c0eea6584)

Bug: 326156501, 332926694
Change-Id: Id56f98899ef9d531e4136486a529167d22c46a69
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5524951
Reviewed-by: Peter McNeeley <petermcneeley@chromium.org>
Commit-Queue: Jiahe Zhang <jiahe.zhang@intel.com>
Cr-Original-Commit-Position: refs/heads/main@{#1298488}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5540570
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Commit-Queue: Peter McNeeley <petermcneeley@chromium.org>
Auto-Submit: Jiahe Zhang <jiahe.zhang@intel.com>
Cr-Commit-Position: refs/branch-heads/6422@{#1030}
Cr-Branched-From: 9012208d0ce02e0cf0adb9b62558627c356f3278-refs/heads/main@{#1287751}
---

--- a/ui/ozone/platform/drm/gpu/hardware_display_controller.cc
+++ b/ui/ozone/platform/drm/gpu/hardware_display_controller.cc
@@ -544,19 +544,23 @@
 
 DrmDumbBuffer* HardwareDisplayController::NextCursorBuffer(
     const SkBitmap& image) {
-  DrmDumbBuffer* next_buffer = nullptr;
-  // Find the smallest buffer size that fits the |image| size and return the not
-  // in-use buffer with that size.
+  // Use the largest buffer as default.
+  int buffer_size = valid_cursor_sizes_.back();
+
+  // Find the smallest buffer size that fits the |image| size.
   for (auto size : valid_cursor_sizes_) {
     if (image.width() <= size && image.height() <= size) {
-      auto& active_buffers = cursor_buffer_map_[size];
-      next_buffer = active_buffers.front().get();
-      if (next_buffer == current_cursor_) {
-        next_buffer = active_buffers.back().get();
-      }
+      buffer_size = size;
       break;
     }
   }
+
+  // Return the not in-use buffer with the |buffer_size|.
+  auto& active_buffers = cursor_buffer_map_[buffer_size];
+  DrmDumbBuffer* next_buffer = active_buffers.front().get();
+  if (next_buffer == current_cursor_) {
+    return active_buffers.back().get();
+  }
   return next_buffer;
 }
 
