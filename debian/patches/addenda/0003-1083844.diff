From 10838444f95177dc6165a2fc8cbfd425dcf69cf2 Mon Sep 17 00:00:00 2001
From: Kristi Saney <kristislee@google.com>
Date: Tue, 24 Oct 2023 21:24:59 +0000
Subject: [PATCH] [Merge M118] Make ReadAnythingUntrustedPageHandler.browser_ a weak ptr

(cherry picked from commit 1d1db68e593863446a45a8b388046ad927eb0a46)

Bug: 1493380
Change-Id: Id178b9dbd879ea28476adb58e6e18fd6fe2082d6
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4953624
Reviewed-by: Jocelyn Tran <jocelyntran@google.com>
Commit-Queue: Kristi Saney <kristislee@google.com>
Cr-Original-Commit-Position: refs/heads/main@{#1213016}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4974036
Auto-Submit: Kristi Saney <kristislee@google.com>
Cr-Commit-Position: refs/branch-heads/5993@{#1421}
Cr-Branched-From: 511350718e646be62331ae9d7213d10ec320d514-refs/heads/main@{#1192594}
---

--- a/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.cc
+++ b/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.cc
@@ -47,7 +47,7 @@
     mojo::PendingRemote<UntrustedPage> page,
     mojo::PendingReceiver<UntrustedPageHandler> receiver,
     content::WebUI* web_ui)
-    : browser_(chrome::FindLastActive()),
+    : browser_(chrome::FindLastActive()->AsWeakPtr()),
       web_ui_(web_ui),
       receiver_(this, std::move(receiver)),
       page_(std::move(page)) {
@@ -56,7 +56,7 @@
   ax_action_handler_observer_.Observe(
       ui::AXActionHandlerRegistry::GetInstance());
 
-  coordinator_ = ReadAnythingCoordinator::FromBrowser(browser_);
+  coordinator_ = ReadAnythingCoordinator::FromBrowser(browser_.get());
   if (coordinator_) {
     coordinator_->AddObserver(this);
     coordinator_->AddModelObserver(this);
@@ -125,30 +125,40 @@
 
 void ReadAnythingUntrustedPageHandler::OnLineSpaceChange(
     read_anything::mojom::LineSpacing line_spacing) {
-  browser_->profile()->GetPrefs()->SetInteger(
-      prefs::kAccessibilityReadAnythingLineSpacing,
-      static_cast<size_t>(line_spacing));
+  if (browser_) {
+    browser_->profile()->GetPrefs()->SetInteger(
+        prefs::kAccessibilityReadAnythingLineSpacing,
+        static_cast<size_t>(line_spacing));
+  }
 }
 
 void ReadAnythingUntrustedPageHandler::OnLetterSpaceChange(
     read_anything::mojom::LetterSpacing letter_spacing) {
-  browser_->profile()->GetPrefs()->SetInteger(
-      prefs::kAccessibilityReadAnythingLetterSpacing,
-      static_cast<size_t>(letter_spacing));
+  if (browser_) {
+    browser_->profile()->GetPrefs()->SetInteger(
+        prefs::kAccessibilityReadAnythingLetterSpacing,
+        static_cast<size_t>(letter_spacing));
+  }
 }
 void ReadAnythingUntrustedPageHandler::OnFontChange(const std::string& font) {
-  browser_->profile()->GetPrefs()->SetString(
-      prefs::kAccessibilityReadAnythingFontName, font);
+  if (browser_) {
+    browser_->profile()->GetPrefs()->SetString(
+        prefs::kAccessibilityReadAnythingFontName, font);
+  }
 }
 void ReadAnythingUntrustedPageHandler::OnFontSizeChange(double font_size) {
   double saved_font_size = std::min(font_size, kReadAnythingMaximumFontScale);
-  browser_->profile()->GetPrefs()->SetDouble(
-      prefs::kAccessibilityReadAnythingFontScale, saved_font_size);
+  if (browser_) {
+    browser_->profile()->GetPrefs()->SetDouble(
+        prefs::kAccessibilityReadAnythingFontScale, saved_font_size);
+  }
 }
 void ReadAnythingUntrustedPageHandler::OnColorChange(
     read_anything::mojom::Colors color) {
-  browser_->profile()->GetPrefs()->SetInteger(
-      prefs::kAccessibilityReadAnythingColorInfo, static_cast<size_t>(color));
+  if (browser_) {
+    browser_->profile()->GetPrefs()->SetInteger(
+        prefs::kAccessibilityReadAnythingColorInfo, static_cast<size_t>(color));
+  }
 }
 
 void ReadAnythingUntrustedPageHandler::OnLinkClicked(
@@ -245,7 +255,8 @@
   DCHECK(features::IsReadAnythingWithScreen2xEnabled());
   // If Screen AI library is downloaded but not initialized yet, ensure it is
   // loadable and initializes without any problems.
-  if (state == screen_ai::ScreenAIInstallState::State::kDownloaded) {
+  if (state == screen_ai::ScreenAIInstallState::State::kDownloaded &&
+      browser_) {
     screen_ai::ScreenAIServiceRouterFactory::GetForBrowserContext(
         browser_->profile())
         ->InitializeMainContentExtractionIfNeeded();
@@ -304,7 +315,7 @@
   // 2. Set an AXContext on the web contents with web contents only mode
   //    enabled.
   content::WebContents* web_contents = nullptr;
-  if (active_) {
+  if (active_ && browser_) {
     web_contents = browser_->tab_strip_model()->GetActiveWebContents();
   }
   Observe(web_contents);
@@ -337,6 +348,10 @@
 }
 
 void ReadAnythingUntrustedPageHandler::LogTextStyle() {
+  if (!browser_) {
+    return;
+  }
+
   // This is called when the side panel closes, so retrieving the values from
   // preferences won't happen very often.
   PrefService* prefs = browser_->profile()->GetPrefs();
--- a/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.h
+++ b/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_page_handler.h
@@ -8,6 +8,7 @@
 #include <string>
 
 #include "base/memory/raw_ptr.h"
+#include "base/memory/weak_ptr.h"
 #include "chrome/browser/ui/tabs/tab_strip_model_observer.h"
 #include "chrome/browser/ui/views/frame/browser_view.h"
 #include "chrome/browser/ui/views/side_panel/read_anything/read_anything_coordinator.h"
@@ -121,7 +122,7 @@
   void LogTextStyle();
 
   raw_ptr<ReadAnythingCoordinator> coordinator_;
-  const raw_ptr<Browser> browser_;
+  const base::WeakPtr<Browser> browser_;
   const raw_ptr<content::WebUI> web_ui_;
   const std::map<std::string, ReadAnythingFont> font_map_ = {
       {"Poppins", ReadAnythingFont::kPoppins},
