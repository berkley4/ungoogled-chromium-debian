From f12ce793d193c414544bf1017cf63081799d5a8f Mon Sep 17 00:00:00 2001
From: Owen Min <zmin@chromium.org>
Date: Wed, 24 Apr 2024 17:26:58 +0000
Subject: [PATCH] [M124 Merge]Postpone report scheduler creation for profile

Initial on the main thread directly causes performance issue.
Repost the task with a best effort task runner.

(cherry picked from commit 0054fda741b707fa057fca9ff458e839dfa9ce32)

Bug: 335636103
Change-Id: I405ceca28af34fdf83a4164d176780e825dc9c75
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5463335
Commit-Queue: Owen Min <zmin@chromium.org>
Reviewed-by: Sean Maher <spvw@chromium.org>
Cr-Original-Commit-Position: refs/heads/main@{#1290087}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5483309
Auto-Submit: Owen Min <zmin@chromium.org>
Commit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Cr-Commit-Position: refs/branch-heads/6367@{#982}
Cr-Branched-From: d158c6dc6e3604e6f899041972edf26087a49740-refs/heads/main@{#1274542}
---

--- a/chrome/browser/enterprise/reporting/cloud_profile_reporting_browsertest.cc
+++ b/chrome/browser/enterprise/reporting/cloud_profile_reporting_browsertest.cc
@@ -57,6 +57,7 @@
 };
 
 IN_PROC_BROWSER_TEST_F(CloudProfileReportingServiceTest, LaunchTest) {
+  base::RunLoop().RunUntilIdle();
   ReportScheduler* report_scheduler =
       CloudProfileReportingServiceFactory::GetForProfile(
           chrome_test_utils::GetProfile(this))
--- a/chrome/browser/enterprise/reporting/cloud_profile_reporting_service.cc
+++ b/chrome/browser/enterprise/reporting/cloud_profile_reporting_service.cc
@@ -20,6 +20,8 @@
 #include "components/enterprise/browser/reporting/report_scheduler.h"
 #include "components/policy/core/common/cloud/cloud_policy_client.h"
 #include "services/network/public/cpp/shared_url_loader_factory.h"
+#include "content/public/browser/browser_task_traits.h"
+#include "content/public/browser/browser_thread.h"
 
 #if BUILDFLAG(IS_ANDROID)
 #include "chrome/browser/enterprise/reporting/reporting_delegate_factory_android.h"
@@ -51,6 +53,20 @@
     Profile* profile,
     policy::DeviceManagementService* device_management_service,
     scoped_refptr<network::SharedURLLoaderFactory> system_url_loader_factory) {
+  content::GetUIThreadTaskRunner({base::TaskPriority::BEST_EFFORT})
+      ->PostTask(
+          FROM_HERE,
+          base::BindOnce(&CloudProfileReportingService::CreateReportScheduler,
+                         weak_factory_.GetWeakPtr(), profile,
+                         device_management_service, system_url_loader_factory));
+}
+
+CloudProfileReportingService::~CloudProfileReportingService() = default;
+
+
+void CloudProfileReportingService::CreateReportScheduler(Profile* profile,
+    policy::DeviceManagementService* device_management_service,
+    scoped_refptr<network::SharedURLLoaderFactory> system_url_loader_factory) {
   std::string profile_id = "";
   if (enterprise::ProfileIdServiceFactory::GetForProfile(profile)) {
     profile_id = enterprise::ProfileIdServiceFactory::GetForProfile(profile)
@@ -75,6 +91,4 @@
   report_scheduler_ = std::make_unique<ReportScheduler>(std::move(params));
 }
 
-CloudProfileReportingService::~CloudProfileReportingService() = default;
-
 }  // namespace enterprise_reporting
--- a/chrome/browser/enterprise/reporting/cloud_profile_reporting_service.h
+++ b/chrome/browser/enterprise/reporting/cloud_profile_reporting_service.h
@@ -8,6 +8,7 @@
 #include <memory>
 
 #include "base/memory/raw_ptr.h"
+#include "base/memory/weak_ptr.h"
 #include "components/enterprise/browser/reporting/report_scheduler.h"
 #include "components/keyed_service/core/keyed_service.h"
 #include "components/policy/core/common/cloud/cloud_policy_client.h"
@@ -33,9 +34,16 @@
 
   ReportScheduler* report_scheduler() { return report_scheduler_.get(); }
 
+  void CreateReportScheduler(Profile* profile,
+    policy::DeviceManagementService* device_management_service,
+    scoped_refptr<network::SharedURLLoaderFactory> system_url_loader_factory);
+
  private:
   std::unique_ptr<policy::CloudPolicyClient> cloud_policy_client_;
   std::unique_ptr<ReportScheduler> report_scheduler_;
+
+  base::WeakPtrFactory<CloudProfileReportingService> weak_factory_{
+      this};
 };
 
 }  // namespace enterprise_reporting
--- a/chrome/browser/ui/webui/policy/policy_ui_handler.cc
+++ b/chrome/browser/ui/webui/policy/policy_ui_handler.cc
@@ -395,19 +395,35 @@
       enterprise_reporting::CloudProfileReportingServiceFactory::GetForProfile(
           Profile::FromWebUI(web_ui()))
           ->report_scheduler();
-  CHECK(profile_report_scheduler);
 
-  if (report_scheduler) {
+  if (report_scheduler && profile_report_scheduler) {
     const auto on_report_uploaded = base::BarrierClosure(
         2, base::BindOnce(&PolicyUIHandler::OnReportUploaded,
                           weak_factory_.GetWeakPtr(), callback_id));
     report_scheduler->UploadFullReport(on_report_uploaded);
     profile_report_scheduler->UploadFullReport(on_report_uploaded);
-  } else {
+    return;
+  }
+
+  if (report_scheduler) {
+    report_scheduler->UploadFullReport(
+        base::BindOnce(&PolicyUIHandler::OnReportUploaded,
+                       weak_factory_.GetWeakPtr(), callback_id));
+    return;
+  }
+
+  if (profile_report_scheduler) {
     profile_report_scheduler->UploadFullReport(
         base::BindOnce(&PolicyUIHandler::OnReportUploaded,
                        weak_factory_.GetWeakPtr(), callback_id));
+    return;
   }
+
+  // TODO(335639255): Consider disable the button when neither report
+  // scheduler are ready. On at least show an error message to ask people
+  // to try again.
+  OnReportUploaded(callback_id);
+
 }
 #endif  // !BUILDFLAG(IS_CHROMEOS)
 
