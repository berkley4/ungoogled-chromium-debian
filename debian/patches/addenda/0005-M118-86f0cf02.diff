From 86f0cf0295bc1dc3d9877afb7949e1ecbda8a85d Mon Sep 17 00:00:00 2001
From: Jocelyn Tran <jocelyntran@google.com>
Date: Mon, 09 Oct 2023 21:02:55 +0000
Subject: [PATCH] [Merge M118][Read Anything] Fix render frame uaf

(cherry picked from commit 30c81dd6746a82c8b8020bbcd3dc0ab50b8b81e5)

Fixed: 1488268
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4908587
Reviewed-by: Abigail Klein <abigailbklein@google.com>
Commit-Queue: Jocelyn Tran <jocelyntran@google.com>
Cr-Original-Commit-Position: refs/heads/main@{#1205343}
Change-Id: I040637963a4b7f0736cad228f72092fba5e5b0ce
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4922809
Owners-Override: Daniel Yip <danielyip@google.com>
Reviewed-by: Jocelyn Tran <jocelyntran@google.com>
Cr-Commit-Position: refs/branch-heads/5993@{#1221}
Cr-Branched-From: 511350718e646be62331ae9d7213d10ec320d514-refs/heads/main@{#1192594}
---

--- a/chrome/renderer/accessibility/read_anything_app_controller.cc
+++ b/chrome/renderer/accessibility/read_anything_app_controller.cc
@@ -407,6 +407,15 @@
   }
 }
 
+void ReadAnythingAppController::ExecuteJavaScript(std::string script) {
+  if (!render_frame_) {
+    return;
+  }
+  // TODO(b/1266555): Use v8::Function rather than javascript. If possible,
+  // replace this function call with firing an event.
+  render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+}
+
 void ReadAnythingAppController::OnActiveAXTreeIDChanged(
     const ui::AXTreeID& tree_id,
     ukm::SourceId ukm_source_id,
@@ -424,10 +433,7 @@
   model_.ClearPendingUpdates();
   model_.set_requires_distillation(false);
 
-  // TODO(b/1266555): Use v8::Function rather than javascript. If possible,
-  // replace this function call with firing an event.
-  std::string script = "chrome.readingMode.showLoading();";
-  render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+  ExecuteJavaScript("chrome.readingMode.showLoading();");
 
   // When the UI first constructs, this function may be called before tree_id
   // has been added to the tree list in AccessibilityEventReceived. In that
@@ -497,10 +503,7 @@
   PostProcessSelection();
 
   if (model_.is_empty()) {
-    // TODO(b/1266555): Use v8::Function rather than javascript. If possible,
-    // replace this function call with firing an event.
-    std::string script = "chrome.readingMode.showEmpty();";
-    render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+    ExecuteJavaScript("chrome.readingMode.showEmpty();");
     if (IsSelectable()) {
       base::UmaHistogramEnumeration(string_constants::kEmptyStateHistogramName,
                                     ReadAnythingEmptyState::kEmptyStateShown);
@@ -543,28 +546,18 @@
 void ReadAnythingAppController::Draw() {
   // This call should check that the active tree isn't in an undistilled state
   // -- that is, it is awaiting distillation or never requested distillation.
-  // TODO(abigailbklein): Use v8::Function rather than javascript. If possible,
-  // replace this function call with firing an event.
-  std::string script = "chrome.readingMode.updateContent();";
-  render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+  ExecuteJavaScript("chrome.readingMode.updateContent();");
 }
 
 void ReadAnythingAppController::DrawSelection() {
   // This call should check that the active tree isn't in an undistilled state
   // -- that is, it is awaiting distillation or never requested distillation.
-  // TODO(abigailbklein): Use v8::Function rather than javascript. If possible,
-  // replace this function call with firing an event.
-  std::string script = "chrome.readingMode.updateSelection();";
-  render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+  ExecuteJavaScript("chrome.readingMode.updateSelection();");
 }
 
 void ReadAnythingAppController::OnThemeChanged(ReadAnythingThemePtr new_theme) {
   model_.OnThemeChanged(std::move(new_theme));
-
-  // TODO(abigailbklein): Use v8::Function rather than javascript. If possible,
-  // replace this function call with firing an event.
-  std::string script = "chrome.readingMode.updateTheme();";
-  render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+  ExecuteJavaScript("chrome.readingMode.updateTheme();");
 }
 
 void ReadAnythingAppController::OnSettingsRestoredFromPrefs(
@@ -575,10 +568,7 @@
     read_anything::mojom::Colors color) {
   model_.OnSettingsRestoredFromPrefs(line_spacing, letter_spacing, font,
                                      font_size, color);
-  // TODO(abigailbklein): Use v8::Function rather than javascript. If possible,
-  // replace this function call with firing an event.
-  std::string script = "chrome.readingMode.restoreSettingsFromPrefs();";
-  render_frame_->ExecuteJavaScript(base::ASCIIToUTF16(script));
+  ExecuteJavaScript("chrome.readingMode.restoreSettingsFromPrefs();");
 }
 
 #if BUILDFLAG(ENABLE_SCREEN_AI_SERVICE)
@@ -893,6 +883,9 @@
   page_handler_factory_->CreateUntrustedPageHandler(
       receiver_.BindNewPipeAndPassRemote(),
       page_handler_.BindNewPipeAndPassReceiver());
+  if (!render_frame_) {
+    return;
+  }
   render_frame_->GetBrowserInterfaceBroker()->GetInterface(
       std::move(page_handler_factory_receiver));
 }
--- a/chrome/renderer/accessibility/read_anything_app_controller.h
+++ b/chrome/renderer/accessibility/read_anything_app_controller.h
@@ -167,6 +167,8 @@
   void Draw();
   void DrawSelection();
 
+  void ExecuteJavaScript(std::string script);
+
   void UnserializeUpdates(std::vector<ui::AXTreeUpdate> updates,
                           const ui::AXTreeID& tree_id);
 
