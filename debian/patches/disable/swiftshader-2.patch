description: additional swiftshader stuff exposed by official builds
author: Andres Salomon <dilinger@debian.org>

--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -957,6 +957,7 @@
       public_deps = [ "//ui/gl:angle_library_copy" ]
     }
 
+if (false) {
     # Add the SwiftShader .dylibs in the MODULE_DIR of Chromium.app
     bundle_data("swiftshader_binaries") {
       sources = [
@@ -971,6 +972,7 @@
         "//ui/gl:swiftshader_vk_library_copy",
       ]
     }
+}
   }
 
   group("angle_library") {
@@ -979,12 +981,6 @@
     }
   }
 
-  group("swiftshader_library") {
-    if (bundle_egl_libraries) {
-      deps = [ ":swiftshader_binaries" ]
-    }
-  }
-
   if (bundle_widevine_cdm) {
     bundle_data("widevine_cdm_library_binaries") {
       sources = [ "$root_out_dir/$widevine_cdm_path/libwidevinecdm.dylib" ]
@@ -1168,7 +1164,6 @@
       ":chrome_framework_resources",
       ":keystone_registration_framework",
       ":optimization_guide_library",
-      ":swiftshader_library",
       ":widevine_cdm_library",
     ]
 
@@ -1255,9 +1250,6 @@
       "$root_out_dir/chrome_crashpad_handler",
       "$root_out_dir/libEGL.dylib",
       "$root_out_dir/libGLESv2.dylib",
-      "$root_out_dir/libswiftshader_libEGL.dylib",
-      "$root_out_dir/libswiftshader_libGLESv2.dylib",
-      "$root_out_dir/libvk_swiftshader.dylib",
       _framework_binary_path,
     ]
     if (build_with_internal_optimization_guide) {
@@ -1294,9 +1286,6 @@
         "//third_party/angle:libEGL",
         "//third_party/angle:libGLESv2",
         "//third_party/breakpad:dump_syms",
-        "//third_party/swiftshader/src/OpenGL/libEGL:swiftshader_libEGL",
-        "//third_party/swiftshader/src/OpenGL/libGLESv2:swiftshader_libGLESv2",
-        "//third_party/swiftshader/src/Vulkan:swiftshader_libvulkan",
       ]
       if (build_with_internal_optimization_guide) {
         deps += [ "//components/optimization_guide/internal:optimization_guide_internal" ]
@@ -1320,9 +1309,6 @@
         "$root_out_dir/chrome_crashpad_handler.dSYM",
         "$root_out_dir/libEGL.dylib.dSYM",
         "$root_out_dir/libGLESv2.dylib.dSYM",
-        "$root_out_dir/libswiftshader_libEGL.dylib.dSYM",
-        "$root_out_dir/libswiftshader_libGLESv2.dylib.dSYM",
-        "$root_out_dir/libvk_swiftshader.dylib.dSYM",
       ]
       if (build_with_internal_optimization_guide) {
         _dsyms += [ "$root_out_dir/liboptimization_guide_internal.dylib.dSYM" ]
@@ -1334,9 +1320,6 @@
         "//components/crash/core/app:chrome_crashpad_handler",
         "//third_party/angle:libEGL",
         "//third_party/angle:libGLESv2",
-        "//third_party/swiftshader/src/OpenGL/libEGL:swiftshader_libEGL",
-        "//third_party/swiftshader/src/OpenGL/libGLESv2:swiftshader_libGLESv2",
-        "//third_party/swiftshader/src/Vulkan:swiftshader_libvulkan",
       ]
       if (build_with_internal_optimization_guide) {
         deps += [ "//components/optimization_guide/internal:optimization_guide_internal" ]
@@ -1750,12 +1733,7 @@
         ":angle_gles_symbols",
         ":chrome_crashpad_symbols",
         ":chrome_symbols",
-        ":swiftshader_egl_symbols",
-        ":swiftshader_gles_symbols",
       ]
-      if (is_linux) {
-        deps += [ ":swiftshader_vk_symbols" ]
-      }
       if (!is_chromeos) {
         deps += [ ":angle_libvulkan_symbols" ]
       }
@@ -1787,6 +1765,7 @@
 
       deps = [ "//components/crash/core/app:chrome_crashpad_handler" ]
     }
+if (false) {
     extract_symbols("swiftshader_egl_symbols") {
       binary = "$root_out_dir/swiftshader/libEGL.so"
 
@@ -1797,8 +1776,6 @@
         symbol_file = "$root_out_dir/swiftshader_libegl.breakpad.$current_cpu"
       }
 
-      deps =
-          [ "//third_party/swiftshader/src/OpenGL/libEGL:swiftshader_libEGL" ]
     }
     extract_symbols("swiftshader_gles_symbols") {
       binary = "$root_out_dir/swiftshader/libGLESv2.so"
@@ -1826,6 +1803,7 @@
 
       deps = [ "//third_party/swiftshader/src/Vulkan:swiftshader_libvulkan" ]
     }
+}
     extract_symbols("angle_egl_symbols") {
       binary = "$root_out_dir/libEGL.so"
 
