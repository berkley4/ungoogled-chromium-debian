From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Mon, 21 Feb 2022 01:24:11 +0100
Subject: Allow building without supervised users

License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 chrome/android/BUILD.gn                                   | 1 -
 chrome/android/chrome_java_sources.gni                    | 1 -
 chrome/browser/BUILD.gn                                   | 6 ------
 .../browser/extensions/api/settings_private/prefs_util.cc | 2 ++
 chrome/browser/profiles/profile_impl.cc                   | 4 ++++
 chrome/browser/profiles/profile_manager.cc                | 4 ++++
 chrome/browser/ui/webui/managed_ui_handler.cc             | 2 ++
 .../browser/ui/webui/management/management_ui_handler.cc  | 2 ++
 components/supervised_user/buildflags.gni                 | 6 +-----
 components/supervised_user/core/common/pref_names.h       | 4 ++++
 .../core/common/supervised_user_constants.cc              | 2 ++
 .../supervised_user/core/common/supervised_user_utils.cc  | 8 ++++++++
 12 files changed, 29 insertions(+), 13 deletions(-)

--- a/chrome/browser/extensions/api/settings_private/prefs_util.cc
+++ b/chrome/browser/extensions/api/settings_private/prefs_util.cc
@@ -1000,9 +1000,11 @@
       settings_api::PrefType::PREF_TYPE_BOOLEAN;
 #endif
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   // Supervised Users.  This setting is queried in our Tast tests (b/241943380).
   (*s_allowlist)[::prefs::kSupervisedUserExtensionsMayRequestPermissions] =
       settings_api::PrefType::PREF_TYPE_BOOLEAN;
+#endif
 
 #if BUILDFLAG(IS_CHROMEOS_LACROS)
   (*s_allowlist)[::prefs::kUseAshProxy] =
--- a/chrome/browser/profiles/profile_impl.cc
+++ b/chrome/browser/profiles/profile_impl.cc
@@ -682,10 +682,12 @@
     prefs->SetTime(prefs::kProfileCreationTime, path_creation_time_);
 
   pref_change_registrar_.Init(prefs);
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   pref_change_registrar_.Add(
       prefs::kSupervisedUserId,
       base::BindRepeating(&ProfileImpl::UpdateSupervisedUserIdInStorage,
                           base::Unretained(this)));
+#endif
 
   // Changes in the profile avatar.
   pref_change_registrar_.Add(
@@ -1611,11 +1613,13 @@
 }
 
 void ProfileImpl::UpdateSupervisedUserIdInStorage() {
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   ProfileManager* profile_manager = g_browser_process->profile_manager();
   ProfileAttributesEntry* entry = profile_manager->GetProfileAttributesStorage()
                                       .GetProfileAttributesWithPath(GetPath());
   if (entry)
     entry->SetSupervisedUserId(GetPrefs()->GetString(prefs::kSupervisedUserId));
+#endif
 }
 
 void ProfileImpl::UpdateNameInStorage() {
--- a/chrome/browser/profiles/profile_manager.cc
+++ b/chrome/browser/profiles/profile_manager.cc
@@ -1212,6 +1212,7 @@
     profile->GetPrefs()->SetString(prefs::kProfileName, profile_name);
   }
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
   bool force_supervised_user_id =
 #if BUILDFLAG(IS_CHROMEOS_ASH)
@@ -1233,6 +1234,7 @@
     profile->GetPrefs()->SetString(prefs::kSupervisedUserId,
                                    supervised_user_id);
   }
+#endif
 #if !BUILDFLAG(IS_ANDROID)
   if (profile->IsNewProfile()) {
     profile->GetPrefs()->SetBoolean(prefs::kHasSeenWelcomePage, false);
@@ -2015,8 +2017,10 @@
   init_params.icon_index =
       profile->GetPrefs()->GetInteger(prefs::kProfileAvatarIndex);
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   init_params.supervised_user_id =
       profile->GetPrefs()->GetString(prefs::kSupervisedUserId);
+#endif
 
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   user_manager::User* user =
--- a/chrome/browser/ui/webui/managed_ui_handler.cc
+++ b/chrome/browser/ui/webui/managed_ui_handler.cc
@@ -90,9 +90,11 @@
     policy_service->AddObserver(domain, this);
   }
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   pref_registrar_.Add(prefs::kSupervisedUserId,
                       base::BindRepeating(&ManagedUIHandler::NotifyIfChanged,
                                           base::Unretained(this)));
+#endif
 }
 
 void ManagedUIHandler::RemoveObservers() {
--- a/chrome/browser/ui/webui/management/management_ui_handler.cc
+++ b/chrome/browser/ui/webui/management/management_ui_handler.cc
@@ -1449,10 +1449,12 @@
 
   pref_registrar_.Init(profile->GetPrefs());
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   pref_registrar_.Add(
       prefs::kSupervisedUserId,
       base::BindRepeating(&ManagementUIHandler::UpdateManagedState,
                           base::Unretained(this)));
+#endif
 
 #if BUILDFLAG(IS_CHROMEOS_ASH)
   pref_registrar_.Add(
--- a/components/supervised_user/core/common/pref_names.h
+++ b/components/supervised_user/core/common/pref_names.h
@@ -5,8 +5,10 @@
 #ifndef COMPONENTS_SUPERVISED_USER_CORE_COMMON_PREF_NAMES_H_
 #define COMPONENTS_SUPERVISED_USER_CORE_COMMON_PREF_NAMES_H_
 
+#include "components/supervised_user/core/common/buildflags.h"
 #include "extensions/buildflags/buildflags.h"
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
 namespace prefs {
 
 // A bool pref that keeps whether the child status for this profile was already
@@ -124,4 +126,6 @@
 
 }  // namespace prefs
 
+#endif // BUILDFLAG(ENABLE_SUPERVISED_USERS)
+
 #endif  // COMPONENTS_SUPERVISED_USER_CORE_COMMON_PREF_NAMES_H_
--- a/components/supervised_user/core/common/supervised_user_constants.cc
+++ b/components/supervised_user/core/common/supervised_user_constants.cc
@@ -68,6 +68,7 @@
 
 const char kChromeOSPasswordData[] = "chromeos-password-data";
 
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
 const char* const kCustodianInfoPrefs[] = {
     prefs::kSupervisedUserCustodianName,
     prefs::kSupervisedUserCustodianEmail,
@@ -80,6 +81,7 @@
     prefs::kSupervisedUserSecondCustodianProfileURL,
     prefs::kSupervisedUserSecondCustodianProfileImageURL,
 };
+#endif
 
 const base::FilePath::CharType kSupervisedUserSettingsFilename[] =
     FILE_PATH_LITERAL("Managed Mode Settings");
--- a/components/supervised_user/core/common/supervised_user_utils.cc
+++ b/components/supervised_user/core/common/supervised_user_utils.cc
@@ -76,11 +76,15 @@
 }
 
 bool AreWebFilterPrefsDefault(const PrefService& pref_service) {
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   return pref_service
              .FindPreference(prefs::kDefaultSupervisedUserFilteringBehavior)
              ->IsDefaultValue() ||
          pref_service.FindPreference(prefs::kSupervisedUserSafeSites)
              ->IsDefaultValue();
+#else
+  return true;
+#endif // BUILDFLAG(ENABLE_SUPERVISED_USERS)
 }
 
 bool EmitLogSegmentHistogram(const std::vector<AccountInfo>& primary_accounts) {
@@ -107,10 +111,14 @@
 }
 
 bool IsSubjectToParentalControls(const PrefService* pref_service) {
+#if BUILDFLAG(ENABLE_SUPERVISED_USERS)
   return pref_service &&
          pref_service->GetString(prefs::kSupervisedUserId) ==
              kChildAccountSUID &&
          IsChildAccountSupervisionEnabled();
+#else
+  return false;
+#endif
 }
 
 }  // namespace supervised_user
