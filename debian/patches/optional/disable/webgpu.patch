--- a/components/viz/common/BUILD.gn
+++ b/components/viz/common/BUILD.gn
@@ -8,6 +8,7 @@
 import("//gpu/vulkan/features.gni")
 import("//skia/features.gni")
 import("//testing/test.gni")
+import("//ui/gl/features.gni")
 
 import("//third_party/inspector_protocol/inspector_protocol.gni")
 
@@ -35,10 +36,12 @@
     "//cc/base",
     "//gpu/vulkan:buildflags",
     "//skia",
-    "//third_party/dawn/include/dawn:cpp_headers",
     "//ui/gfx:buffer_types",
     "//ui/gfx/geometry",
   ]
+  if (use_dawn) {
+    deps += [ "//third_party/dawn/include/dawn:cpp_headers" ]
+  }
   if (enable_vulkan) {
     deps += [ "//third_party/vulkan-deps/vulkan-headers/src:vulkan_headers" ]
   }
--- a/services/on_device_model/BUILD.gn
+++ b/services/on_device_model/BUILD.gn
@@ -42,12 +42,14 @@
     }
 
     if (is_linux || is_chromeos) {
-      deps += [
-        "//gpu/config",
-        "//third_party/dawn/src/dawn:cpp",
-        "//third_party/dawn/src/dawn:proc",
-        "//third_party/dawn/src/dawn/native",
-      ]
+      deps += [ "//gpu/config" ]
+      if (use_dawn) {
+        deps += [
+          "//third_party/dawn/src/dawn:cpp",
+          "//third_party/dawn/src/dawn:proc",
+          "//third_party/dawn/src/dawn/native",
+        ]
+      }
     }
   }
 }
--- a/services/on_device_model/ml/BUILD.gn
+++ b/services/on_device_model/ml/BUILD.gn
@@ -27,8 +27,12 @@
     "//components/translate/core/language_detection",
     "//gpu/config",
     "//third_party/angle:includes",
-    "//third_party/dawn/src/dawn/native",
   ]
+
+  if (use_dawn) {
+    deps += [ "//third_party/dawn/src/dawn/native" ]
+  }
+
   public_deps = [
     ":api",
     "//base",
--- a/services/on_device_model/pre_sandbox_init.cc
+++ b/services/on_device_model/pre_sandbox_init.cc
@@ -16,9 +16,11 @@
 
 #if BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)
 #include "gpu/config/gpu_info_collector.h"                    // nogncheck
+#if BUILDFLAG(USE_DAWN)
 #include "third_party/dawn/include/dawn/dawn_proc.h"          // nogncheck
 #include "third_party/dawn/include/dawn/native/DawnNative.h"  // nogncheck
 #include "third_party/dawn/include/dawn/webgpu_cpp.h"         // nogncheck
+#endif  // BUILDFLAG(USE_DAWN)
 #endif
 
 namespace on_device_model {
@@ -74,7 +76,7 @@
   }
 #endif
 
-#if BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)
+#if (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)) && BUILDFLAG(USE_DAWN)
   // Warm any relevant drivers before attempting to bring up the sandbox. For
   // good measure we initialize a device instance for any adapter with an
   // appropriate backend on top of any integrated or discrete GPU.
