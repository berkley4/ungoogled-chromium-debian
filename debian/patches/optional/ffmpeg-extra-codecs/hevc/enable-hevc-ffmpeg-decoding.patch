From f2690de69556f1a3cde4cd83ebbc966eb2d7740c Mon Sep 17 00:00:00 2001
From: Sta Zhu <zhusidayoyo@hotmail.com>
Date: Mon, 15 Jul 2024 17:12:05 +0800
Subject: [PATCH] Video: Enable HEVC ffmpeg decoding

This will consider all HEVC profile as to supported, let FFMpegVideoDecoder
handle SW fallback and help you be able to play video's like HEVC Rext, SCC 
etc... as long as ffmpeg support it.
---
 media/base/supported_types.cc         | 29 ++++-----------------------
 media/filters/ffmpeg_glue.cc          |  3 +++
 media/filters/ffmpeg_video_decoder.cc |  2 +-
 3 files changed, 8 insertions(+), 26 deletions(-)

--- a/media/base/supported_types.cc
+++ b/media/base/supported_types.cc
@@ -223,33 +223,7 @@
 #endif  // !BUILDFLAG(USE_PROPRIETARY_CODECS)
 
 bool IsHevcProfileSupported(const VideoType& type) {
-  if (!IsColorSpaceSupported(type.color_space))
-    return false;
-
-#if BUILDFLAG(ENABLE_PLATFORM_HEVC)
-#if BUILDFLAG(PLATFORM_HAS_OPTIONAL_HEVC_SUPPORT)
-#if BUILDFLAG(IS_CHROMEOS_LACROS)
-  // TODO(b/171813538): For Lacros, the supplemental profile cache will be
-  // asking lacros-gpu, but we will be doing decoding in ash-gpu. Until the
-  // codec detection is plumbed through to ash-gpu we can do this extra check
-  // for HEVC support.
-  if (base::CommandLine::ForCurrentProcess()->HasSwitch(
-          switches::kLacrosEnablePlatformHevc)) {
     return true;
-  }
-#endif  // BUILDFLAG(IS_CHROMEOS_LACROS)
-#if BUILDFLAG(IS_CHROMEOS_ASH)
-  if (!base::FeatureList::IsEnabled(kPlatformHEVCDecoderSupport)) {
-    return false;
-  }
-#endif  // BUILDFLAG(IS_CHROMEOS_ASH)
-  return GetSupplementalProfileCache()->IsProfileSupported(type.profile);
-#else
-  return true;
-#endif  // BUIDFLAG(PLATFORM_HAS_OPTIONAL_HEVC_SUPPORT)
-#else
-  return false;
-#endif  // BUILDFLAG(ENABLE_PLATFORM_HEVC)
 }
 
 bool IsVp9ProfileSupported(const VideoType& type) {
--- a/media/filters/ffmpeg_glue.cc
+++ b/media/filters/ffmpeg_glue.cc
@@ -174,7 +174,7 @@
 const char* FFmpegGlue::GetAllowedVideoDecoders() {
   // This should match the configured lists in //third_party/ffmpeg.
 #if BUILDFLAG(USE_PROPRIETARY_CODECS) && BUILDFLAG(ENABLE_FFMPEG_VIDEO_DECODERS)
-  return IsBuiltInVideoCodec(VideoCodec::kH264) ? "h264" : "";
+  return IsBuiltInVideoCodec(VideoCodec::kH264) ? "h264,hevc" : "";
 #else
   return "";
 #endif
--- a/media/filters/ffmpeg_video_decoder.cc
+++ b/media/filters/ffmpeg_video_decoder.cc
@@ -82,7 +82,6 @@
     case VideoCodec::kUnknown:
     case VideoCodec::kVC1:
     case VideoCodec::kMPEG2:
-    case VideoCodec::kHEVC:
     case VideoCodec::kVP9:
     case VideoCodec::kAV1:
     case VideoCodec::kDolbyVision:
@@ -93,6 +92,7 @@
       NOTREACHED();
 
     case VideoCodec::kH264:
+    case VideoCodec::kHEVC:
       // Normalize to three threads for 1080p content, then scale linearly
       // with number of pixels.
       // Examples:
@@ -126,8 +126,9 @@
 
 // static
 bool FFmpegVideoDecoder::IsCodecSupported(VideoCodec codec) {
-  // We only build support for H.264.
-  return codec == VideoCodec::kH264 && IsBuiltInVideoCodec(codec);
+  // We only build support for H.264 / H.264.
+  return (codec == VideoCodec::kH264 || codec == VideoCodec::kHEVC) &&
+         IsBuiltInVideoCodec(codec);
 }
 
 FFmpegVideoDecoder::FFmpegVideoDecoder(MediaLog* media_log)
