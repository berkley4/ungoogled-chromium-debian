From e3e7862718bce4eb785c59d96359a35ca64c6ac5 Mon Sep 17 00:00:00 2001
From: "liberato@chromium.org" <liberato@chromium.org>
Date: Mon, 7 Mar 2022 20:17:13 +0000
Subject: [PATCH] [M99] Don't use a deleted RenderFrameHost.

Since we do not check for frame liveness, a RenderFrameHost might be
deleted (in the use-after-free sense) without another call to
RenderFrameDeleted.  So, WeakPtr it to avoid these cases.

(cherry picked from commit 4d71d571302a75192f26d9e1122150ae5c600abb)

Bug: 1299422
Change-Id: Ie4fe85f88ef80f4e4c3d0452397c0e5050ed881c
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3482540
Reviewed-by: Bo Liu <boliu@chromium.org>
Commit-Queue: Frank Liberato <liberato@chromium.org>
Auto-Submit: Frank Liberato <liberato@chromium.org>
Cr-Original-Commit-Position: refs/heads/main@{#976357}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3508293
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Commit-Queue: Bo Liu <boliu@chromium.org>
Cr-Commit-Position: refs/branch-heads/4844@{#997}
Cr-Branched-From: 007241ce2e6c8e5a7b306cc36c730cd07cd38825-refs/heads/main@{#961656}
---
 .../display_cutout_host_impl.cc               | 22 +++++++++++--------
 .../display_cutout/display_cutout_host_impl.h |  4 +++-
 2 files changed, 16 insertions(+), 10 deletions(-)

--- a/content/browser/display_cutout/display_cutout_host_impl.cc
+++ b/content/browser/display_cutout/display_cutout_host_impl.cc
@@ -5,6 +5,7 @@
 #include "content/browser/display_cutout/display_cutout_host_impl.h"
 
 #include "content/browser/display_cutout/display_cutout_constants.h"
+#include "content/browser/renderer_host/render_frame_host_impl.h"
 #include "content/browser/web_contents/web_contents_impl.h"
 #include "content/public/browser/navigation_handle.h"
 #include "mojo/public/cpp/bindings/associated_remote.h"
@@ -38,7 +39,7 @@
 
   // If we are the current |RenderFrameHost| frame then notify
   // WebContentsObservers about the new value.
-  if (current_rfh_ == rfh)
+  if (current_rfh_.get() == rfh)
     web_contents_impl_->NotifyViewportFitChanged(value);
 }
 
@@ -61,7 +62,9 @@
 
   // If we finish a main frame navigation and the |WebDisplayMode| is
   // fullscreen then we should make the main frame the current
-  // |RenderFrameHost|.
+  // |RenderFrameHost|.  Note that this is probably not correct; we do not check
+  // that the navigation completed successfully, nor do we check if the main
+  // frame is still IsRenderFrameLive().
   blink::mojom::DisplayMode mode = web_contents_impl_->GetDisplayMode();
   if (mode == blink::mojom::DisplayMode::kFullscreen)
     SetCurrentRenderFrameHost(web_contents_impl_->GetMainFrame());
@@ -71,7 +74,7 @@
   values_.erase(rfh);
 
   // If we were the current |RenderFrameHost| then we should clear that.
-  if (current_rfh_ == rfh)
+  if (current_rfh_.get() == rfh)
     SetCurrentRenderFrameHost(nullptr);
 }
 
@@ -83,28 +86,29 @@
   insets_ = insets;
 
   if (current_rfh_)
-    SendSafeAreaToFrame(current_rfh_, insets);
+    SendSafeAreaToFrame(current_rfh_.get(), insets);
 }
 
 void DisplayCutoutHostImpl::SetCurrentRenderFrameHost(RenderFrameHost* rfh) {
-  if (current_rfh_ == rfh)
+  if (current_rfh_.get() == rfh)
     return;
 
   // If we had a previous frame then we should clear the insets on that frame.
   if (current_rfh_)
-    SendSafeAreaToFrame(current_rfh_, gfx::Insets());
-
-  // Update the |current_rfh_| with the new frame.
-  current_rfh_ = rfh;
+    SendSafeAreaToFrame(current_rfh_.get(), gfx::Insets());
 
   // If the new RenderFrameHost is nullptr we should stop here and notify
   // observers that the new viewport fit is kAuto (the default).
   if (!rfh) {
+    current_rfh_ = nullptr;
     web_contents_impl_->NotifyViewportFitChanged(
         blink::mojom::ViewportFit::kAuto);
     return;
   }
 
+  // Update the |current_rfh_| with the new frame.
+  current_rfh_ = static_cast<RenderFrameHostImpl*>(rfh)->GetWeakPtr();
+
   // Send the current safe area to the new frame.
   SendSafeAreaToFrame(rfh, insets_);
 
--- a/content/browser/display_cutout/display_cutout_host_impl.h
+++ b/content/browser/display_cutout/display_cutout_host_impl.h
@@ -6,6 +6,7 @@
 #define CONTENT_BROWSER_DISPLAY_CUTOUT_DISPLAY_CUTOUT_HOST_IMPL_H_
 
 #include "base/memory/raw_ptr.h"
+#include "base/memory/weak_ptr.h"
 #include "content/public/browser/render_frame_host_receiver_set.h"
 #include "content/public/browser/web_contents_observer.h"
 #include "third_party/blink/public/mojom/page/display_cutout.mojom.h"
@@ -13,6 +14,7 @@
 
 namespace content {
 
+class RenderFrameHostImpl;
 class WebContentsImpl;
 
 class DisplayCutoutHostImpl : public blink::mojom::DisplayCutoutHost {
@@ -67,7 +69,7 @@
   // `WebContentsImpl::current_fullscreen_frame_` because it also considers
   // browser side driven fullscreen mode, not just renderer side requested
   // frames.
-  raw_ptr<RenderFrameHost> current_rfh_ = nullptr;
+  base::WeakPtr<RenderFrameHostImpl> current_rfh_;
 
   // Stores a map of RenderFrameHosts and their current viewport fit values.
   std::map<RenderFrameHost*, blink::mojom::ViewportFit> values_;
