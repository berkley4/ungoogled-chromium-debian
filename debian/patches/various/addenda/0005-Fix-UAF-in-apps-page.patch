From e400cb1bdffdc10f87cf648481d3eadf96fd8496 Mon Sep 17 00:00:00 2001
From: Evan Stade <estade@chromium.org>
Date: Mon, 7 Mar 2022 21:13:06 +0000
Subject: [PATCH] Fix UAF in apps page.

(cherry picked from commit 64f02e6e38d192a234a1d4f873d01e05aa85a367)

Bug: 1302157
Change-Id: I078d20add15bccec84ba13c384c191fd3b60c85b
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3498946
Reviewed-by: Daniel Cheng <dcheng@chromium.org>
Commit-Queue: Evan Stade <estade@chromium.org>
Cr-Original-Commit-Position: refs/heads/main@{#977002}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3508332
Auto-Submit: Evan Stade <estade@chromium.org>
Commit-Queue: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Bot-Commit: Rubber Stamper <rubber-stamper@appspot.gserviceaccount.com>
Cr-Commit-Position: refs/branch-heads/4844@{#999}
Cr-Branched-From: 007241ce2e6c8e5a7b306cc36c730cd07cd38825-refs/heads/main@{#961656}
---
 .../ui/webui/ntp/app_launcher_handler.cc      |  4 ++
 .../ui/webui/ntp/app_launcher_handler.h       |  4 ++
 .../ntp/app_launcher_handler_unittest.cc      | 53 +++++++++++--------
 3 files changed, 39 insertions(+), 22 deletions(-)

--- a/chrome/browser/ui/webui/ntp/app_launcher_handler.cc
+++ b/chrome/browser/ui/webui/ntp/app_launcher_handler.cc
@@ -180,6 +180,10 @@
 AppLauncherHandler::~AppLauncherHandler() {
   Profile* webui_profile = Profile::FromWebUI(web_ui());
   ExtensionRegistry::Get(webui_profile)->RemoveObserver(this);
+  // Destroy `extension_uninstall_dialog_` now, since `this` is an
+  // `ExtensionUninstallDialog::Delegate` and the dialog may call back into
+  // `this` when destroyed.
+  extension_uninstall_dialog_.reset();
 }
 
 void AppLauncherHandler::CreateWebAppInfo(const web_app::AppId& app_id,
--- a/chrome/browser/ui/webui/ntp/app_launcher_handler.h
+++ b/chrome/browser/ui/webui/ntp/app_launcher_handler.h
@@ -9,6 +9,7 @@
 #include <set>
 #include <string>
 
+#include "base/gtest_prod_util.h"
 #include "base/memory/raw_ptr.h"
 #include "base/scoped_observation.h"
 #include "base/task/cancelable_task_tracker.h"
@@ -176,6 +177,9 @@
   void HandleRunOnOsLogin(const base::ListValue* args);
 
  private:
+  FRIEND_TEST_ALL_PREFIXES(AppLauncherHandlerTest,
+                           HandleClosedWhileUninstallingExtension);
+
   struct AppInstallInfo {
     AppInstallInfo();
     ~AppInstallInfo();
--- a/chrome/browser/ui/webui/ntp/app_launcher_handler_unittest.cc
+++ b/chrome/browser/ui/webui/ntp/app_launcher_handler_unittest.cc
@@ -16,16 +16,18 @@
 #include "chrome/browser/web_applications/test/web_app_install_test_utils.h"
 #include "chrome/browser/web_applications/web_app_provider.h"
 #include "chrome/browser/web_applications/web_app_sync_bridge.h"
+#include "chrome/test/base/browser_with_test_window_test.h"
 #include "chrome/test/base/testing_profile.h"
 #include "content/public/browser/web_contents.h"
-#include "content/public/test/browser_task_environment.h"
 #include "content/public/test/test_renderer_host.h"
 #include "content/public/test/test_web_ui.h"
 #include "content/public/test/web_contents_tester.h"
+#include "extensions/common/extension_builder.h"
 #include "testing/gmock/include/gmock/gmock.h"
 #include "testing/gtest/include/gtest/gtest.h"
 
-namespace web_app {
+using web_app::AppId;
+using web_app::WebAppProvider;
 
 namespace {
 
@@ -76,7 +78,7 @@
 
 }  // namespace
 
-class AppLauncherHandlerTest : public testing::Test {
+class AppLauncherHandlerTest : public BrowserWithTestWindowTest {
  public:
   AppLauncherHandlerTest() = default;
 
@@ -86,13 +88,7 @@
   ~AppLauncherHandlerTest() override = default;
 
   void SetUp() override {
-    testing::Test::SetUp();
-
-    TestingProfile::Builder builder;
-#if BUILDFLAG(IS_CHROMEOS_LACROS)
-    builder.SetIsMainProfile(true);
-#endif  // BUILDFLAG(IS_CHROMEOS_LACROS)
-    testing_profile_ = builder.Build();
+    BrowserWithTestWindowTest::SetUp();
 
     extension_service_ = CreateTestExtensionService();
 
@@ -102,8 +98,6 @@
   }
 
  protected:
-  Profile* profile() { return testing_profile_->GetOriginalProfile(); }
-
   std::unique_ptr<TestAppLauncherHandler> GetAppLauncherHandler(
       content::TestWebUI* test_web_ui) {
     return std::make_unique<TestAppLauncherHandler>(
@@ -113,7 +107,8 @@
   // Install a web app and sets the locally installed property based on
   // |is_locally_installed|.
   AppId InstallWebApp(bool is_locally_installed = true) {
-    AppId installed_app_id = test::InstallWebApp(profile(), BuildWebAppInfo());
+    AppId installed_app_id =
+        web_app::test::InstallWebApp(profile(), BuildWebAppInfo());
     if (is_locally_installed)
       return installed_app_id;
 
@@ -156,12 +151,11 @@
   }
 
   std::unique_ptr<content::WebContents> CreateTestWebContents() {
-    auto site_instance = content::SiteInstance::Create(browser_context());
+    auto site_instance = content::SiteInstance::Create(profile());
     return content::WebContentsTester::CreateTestWebContents(
-        browser_context(), std::move(site_instance));
+        profile(), std::move(site_instance));
   }
 
- private:
   extensions::ExtensionService* CreateTestExtensionService() {
     auto* extension_system = static_cast<extensions::TestExtensionSystem*>(
         extensions::ExtensionSystem::Get(profile()));
@@ -172,11 +166,6 @@
     return ext_service;
   }
 
-  content::BrowserContext* browser_context() { return testing_profile_.get(); }
-
-  content::BrowserTaskEnvironment task_environment_;
-  content::RenderViewHostTestEnabler render_view_host_test_enabler_;
-  std::unique_ptr<TestingProfile> testing_profile_;
   web_app::OsIntegrationManager::ScopedSuppressForTesting os_hooks_suppress_;
   raw_ptr<extensions::ExtensionService> extension_service_;
 };
@@ -246,4 +235,24 @@
                                    installed_app_id);
 }
 
-}  // namespace web_app
+// Regression test for crbug.com/1302157.
+TEST_F(AppLauncherHandlerTest, HandleClosedWhileUninstallingExtension) {
+  scoped_refptr<const extensions::Extension> extension =
+      extensions::ExtensionBuilder("foo").Build();
+  extension_service_->AddExtension(extension.get());
+
+  AddTab(browser(), GURL("http://foo/1"));
+  content::WebContents* contents =
+      browser()->tab_strip_model()->GetWebContentsAt(0);
+  std::unique_ptr<content::WebContents> test_web_contents =
+      CreateTestWebContents();
+  std::unique_ptr<content::TestWebUI> test_web_ui = CreateTestWebUI(contents);
+  std::unique_ptr<TestAppLauncherHandler> app_launcher_handler =
+      GetAppLauncherHandler(test_web_ui.get());
+
+  app_launcher_handler->CreateExtensionUninstallDialog()->ConfirmUninstall(
+      extension, extensions::UNINSTALL_REASON_USER_INITIATED,
+      extensions::UNINSTALL_SOURCE_CHROME_APPS_PAGE);
+  app_launcher_handler.reset();
+  // No crash (in asan tester) indicates a passing score.
+}
