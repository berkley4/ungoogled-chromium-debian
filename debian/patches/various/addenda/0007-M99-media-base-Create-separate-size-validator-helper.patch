From e34092fcdace5ca82e431659dfac69990b385c77 Mon Sep 17 00:00:00 2001
From: Jeff Chen <jeffcchen@google.com>
Date: Mon, 7 Mar 2022 23:53:26 +0000
Subject: [PATCH] [M99] [media/base] Create separate size validator helper.

Separate specific size validation into a separate function that can be
called independently.

(cherry picked from commit 8e3e23fa7270147b625e1fec8897f8104adf1622)

Tested: video_frame_unittest.
Bug: b:209660985
Change-Id: Iab61ea26d199da73bb7b1ac43042383d654f6208
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3425277
Reviewed-by: Andres Calderon Jaramillo <andrescj@chromium.org>
Reviewed-by: Dan Sanders <sandersd@chromium.org>
Commit-Queue: Jeff Chen <jeffcchen@chromium.org>
Cr-Original-Commit-Position: refs/heads/main@{#971888}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3507816
Commit-Queue: Andres Calderon Jaramillo <andrescj@chromium.org>
Auto-Submit: Andres Calderon Jaramillo <andrescj@chromium.org>
Reviewed-by: Dale Curtis <dalecurtis@chromium.org>
Commit-Queue: Dale Curtis <dalecurtis@chromium.org>
Cr-Commit-Position: refs/branch-heads/4844@{#1004}
Cr-Branched-From: 007241ce2e6c8e5a7b306cc36c730cd07cd38825-refs/heads/main@{#961656}
---
 media/base/video_frame.cc | 24 +++++++++++++-----------
 media/base/video_frame.h  | 10 +++++++---
 2 files changed, 20 insertions(+), 14 deletions(-)

--- a/media/base/video_frame.cc
+++ b/media/base/video_frame.cc
@@ -1421,21 +1421,23 @@
   return adjusted;
 }
 
+// static
 bool VideoFrame::IsValidSize(const gfx::Size& coded_size,
                              const gfx::Rect& visible_rect,
                              const gfx::Size& natural_size) {
-  int coded_size_area = coded_size.GetCheckedArea().ValueOrDefault(INT_MAX);
-  int natural_size_area = natural_size.GetCheckedArea().ValueOrDefault(INT_MAX);
-  static_assert(limits::kMaxCanvas < INT_MAX, "");
-  return !(coded_size_area > limits::kMaxCanvas ||
-           coded_size.width() > limits::kMaxDimension ||
-           coded_size.height() > limits::kMaxDimension ||
-           visible_rect.x() < 0 || visible_rect.y() < 0 ||
+  return IsValidCodedSize(coded_size) && IsValidCodedSize(natural_size) &&
+         !(visible_rect.x() < 0 || visible_rect.y() < 0 ||
            visible_rect.right() > coded_size.width() ||
-           visible_rect.bottom() > coded_size.height() ||
-           natural_size_area > limits::kMaxCanvas ||
-           natural_size.width() > limits::kMaxDimension ||
-           natural_size.height() > limits::kMaxDimension);
+           visible_rect.bottom() > coded_size.height());
+}
+
+// static
+bool VideoFrame::IsValidCodedSize(const gfx::Size& size) {
+  const int size_area = size.GetCheckedArea().ValueOrDefault(INT_MAX);
+  static_assert(limits::kMaxCanvas < INT_MAX, "");
+  return size_area <= limits::kMaxCanvas &&
+         size.width() <= limits::kMaxDimension &&
+         size.height() <= limits::kMaxDimension;
 }
 
 // static
--- a/media/base/video_frame.h
+++ b/media/base/video_frame.h
@@ -122,13 +122,17 @@
   VideoFrame(const VideoFrame&) = delete;
   VideoFrame& operator=(const VideoFrame&) = delete;
 
-  // Returns true if size is valid for a VideoFrame. This method returns false
-  // if the size is empty, even though it is possible to create a zero-sized
-  // VideoFrame if the VideoPixelFormat is PIXEL_FORMAT_UNKNOWN.
+  // Returns true if size is valid for a VideoFrame.
   static bool IsValidSize(const gfx::Size& coded_size,
                           const gfx::Rect& visible_rect,
                           const gfx::Size& natural_size);
 
+  // Returns true if and only if the |size| is within limits, i.e., neither
+  // dimension exceeds limits::kMaxDimension and the total area doesn't exceed
+  // limits::kMaxCanvas. Prefer the overload that accepts the |coded_size|,
+  // |visible_rect|, and |natural_size| if trying to validate the VideoFrame.
+  static bool IsValidCodedSize(const gfx::Size& size);
+
   // Returns true if frame configuration is valid.
   static bool IsValidConfig(VideoPixelFormat format,
                             StorageType storage_type,
