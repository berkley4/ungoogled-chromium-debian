From 73a94f9ea5fe4c2a6887640574d1c57ff5b45cc1 Mon Sep 17 00:00:00 2001
From: Yann Dago <ydago@chromium.org>
Date: Fri, 09 Jun 2023 14:28:10 +0000
Subject: [PATCH] Fix PolicyStatusProvider crash

Avoid calling policy::PolicyStatusProvider::GetStatusFromCore if the
policy store is not managed.

Also fixes the console error when chrome://policy is accessed with an
account from a flex org.

(cherry picked from commit d5665f0cbf875268973ef95679f92d76a9a70a81)

Bug: 1446469
Change-Id: I247021162fb3ec973ff8334e259ffeddfb476904
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4544594
Auto-Submit: Yann Dago <ydago@chromium.org>
Reviewed-by: Igor Ruvinov <igorruvinov@chromium.org>
Commit-Queue: Igor Ruvinov <igorruvinov@chromium.org>
Cr-Original-Commit-Position: refs/heads/main@{#1146629}
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4598353
Commit-Queue: Yann Dago <ydago@chromium.org>
Reviewed-by: Yann Dago <ydago@chromium.org>
Cr-Commit-Position: refs/branch-heads/5735@{#1218}
Cr-Branched-From: 2f562e4ddbaf79a3f3cb338b4d1bd4398d49eb67-refs/heads/main@{#1135570}
---

--- a/chrome/browser/policy/status_provider/user_cloud_policy_status_provider.cc
+++ b/chrome/browser/policy/status_provider/user_cloud_policy_status_provider.cc
@@ -26,6 +26,17 @@
 UserCloudPolicyStatusProvider::~UserCloudPolicyStatusProvider() = default;
 
 base::Value::Dict UserCloudPolicyStatusProvider::GetStatus() {
+  signin::IdentityManager* identity_manager =
+      IdentityManagerFactory::GetForProfile(profile_);
+  const bool is_flex_org =
+      identity_manager && identity_manager
+                              ->FindExtendedAccountInfoByEmailAddress(
+                                  profile_->GetProfileUserName())
+                              .IsMemberOfFlexOrg();
+  if (!is_flex_org && !core_->store()->is_managed()) {
+    return {};
+  }
+
   ProfileAttributesEntry* entry =
       g_browser_process->profile_manager()
           ->GetProfileAttributesStorage()
@@ -37,17 +48,6 @@
       policy::PolicyStatusProvider::GetStatusFromCore(core_);
 
   if (enrollment_token.empty()) {
-    signin::IdentityManager* identity_manager =
-        IdentityManagerFactory::GetForProfile(profile_);
-    const bool is_flex_org =
-        identity_manager && identity_manager
-                                ->FindExtendedAccountInfoByEmailAddress(
-                                    profile_->GetProfileUserName())
-                                .IsMemberOfFlexOrg();
-    if (!is_flex_org && !core_->store()->is_managed()) {
-      return {};
-    }
-
     SetDomainExtractedFromUsername(dict);
     GetUserAffiliationStatus(&dict, profile_);
     dict.Set(policy::kFlexOrgWarningKey, is_flex_org);
--- a/components/policy/resources/webui/status_box.ts
+++ b/components/policy/resources/webui/status_box.ts
@@ -7,7 +7,6 @@
 import {CustomElement} from 'chrome://resources/js/custom_element.js';
 import {loadTimeData} from 'chrome://resources/js/load_time_data.js';
 import {sanitizeInnerHtml} from 'chrome://resources/js/parse_html_subset.js';
-import {getRequiredElement} from 'chrome://resources/js/util_ts.js';
 
 import {getTemplate} from './status_box.html.js';
 
@@ -63,8 +62,8 @@
    */
   private setLabelInnerHtmlAndShow(
       labelName: string, labelValue: string, needsToBeShown: boolean = true) {
-    const labelElement = getRequiredElement(labelName);
-    labelElement.innerHTML = sanitizeInnerHtml(` ${labelValue}`);
+    const labelElement = this.shadowRoot!.querySelector(labelName);
+    labelElement!.innerHTML = sanitizeInnerHtml(` ${labelValue}`);
     if (needsToBeShown) {
       labelElement!.parentElement!.hidden = false;
     }
