From: uazo <uazo@users.noreply.github.com>
Date: Tue, 25 Jan 2022 12:22:52 +0000
Subject: Disable all predictors code

Original License: GPL-2.0-or-later - https://spdx.org/licenses/GPL-2.0-or-later.html
License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 .../chrome_hints_manager.cc                   |  1 +
 .../optimization_guide_keyed_service.cc       |  1 -
 chrome/common/chrome_features.cc              |  8 ++--
 .../optimization_guide/core/hints_fetcher.cc  |  1 +
 .../optimization_guide/core/hints_manager.cc  |  5 +++
 .../core/optimization_guide_features.cc       | 38 +++++++++----------
 .../core/prediction_model_download_manager.cc |  6 ++-
 .../core/prediction_model_fetcher_impl.cc     |  1 +
 components/optimization_guide/features.gni    |  4 +-
 components/permissions/features.cc            |  8 ++--
 third_party/blink/common/features.cc          |  8 +---
 11 files changed, 40 insertions(+), 41 deletions(-)

--- a/chrome/common/chrome_features.cc
+++ b/chrome/common/chrome_features.cc
@@ -869,8 +869,8 @@
 // Enables using the prediction service for permission prompts. We will keep
 // this feature in order to allow us to update the holdback chance via finch.
 BASE_FEATURE(kPermissionPredictions,
-             "PermissionPredictions",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "PermissionPredictions",               // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);    // in Bromite
 
 // The holdback chance is 30% but it can also be configured/updated
 // through finch if needed.
@@ -881,8 +881,8 @@
 
 // Enables using the prediction service for geolocation permission prompts.
 BASE_FEATURE(kPermissionGeolocationPredictions,
-             "PermissionGeolocationPredictions",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "PermissionGeolocationPredictions",        // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);        // in Bromite
 
 const base::FeatureParam<double>
     kPermissionGeolocationPredictionsHoldbackChance(
--- a/components/optimization_guide/core/optimization_guide_features.cc
+++ b/components/optimization_guide/core/optimization_guide_features.cc
@@ -78,17 +78,17 @@
 // Enables the syncing of the Optimization Hints component, which provides
 // hints for what optimizations can be applied on a page load.
 BASE_FEATURE(kOptimizationHints,
-             "OptimizationHints",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "OptimizationHints",                   // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);    // in Bromite
 
 // Enables fetching from a remote Optimization Guide Service.
 BASE_FEATURE(kRemoteOptimizationGuideFetching,
-             "OptimizationHintsFetching",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "OptimizationHintsFetching",           // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);    // in Bromite
 
 BASE_FEATURE(kRemoteOptimizationGuideFetchingAnonymousDataConsent,
-             "OptimizationHintsFetchingAnonymousDataConsent",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "OptimizationHintsFetchingAnonymousDataConsent",        // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);                     // in Bromite
 
 // Enables performance info in the context menu and fetching from a remote
 // Optimization Guide Service.
@@ -98,17 +98,13 @@
 
 // Enables the prediction of optimization targets.
 BASE_FEATURE(kOptimizationTargetPrediction,
-             "OptimizationTargetPrediction",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "OptimizationTargetPrediction",                         // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);                     // in Bromite
 
 // Enables the downloading of models.
 BASE_FEATURE(kOptimizationGuideModelDownloading,
-             "OptimizationGuideModelDownloading",
-#if BUILDFLAG(BUILD_WITH_TFLITE_LIB)
-             base::FEATURE_ENABLED_BY_DEFAULT
-#else   // BUILD_WITH_TFLITE_LIB
-             base::FEATURE_DISABLED_BY_DEFAULT
-#endif  // !BUILD_WITH_TFLITE_LIB
+             "OptimizationGuideModelDownloading",                    // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT                       // in Bromite
 );
 
 // Enables page content to be annotated.
@@ -118,8 +114,8 @@
 
 // Enables fetching page metadata from the remote Optimization Guide service.
 BASE_FEATURE(kRemotePageMetadata,
-             "RemotePageMetadata",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "RemotePageMetadata",                // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);  // in Bromite
 
 // Enables the page entities model to be annotated on every page load.
 BASE_FEATURE(kPageEntitiesPageContentAnnotations,
@@ -149,8 +145,8 @@
 
 // Enables push notification of hints.
 BASE_FEATURE(kPushNotifications,
-             "OptimizationGuidePushNotifications",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "OptimizationGuidePushNotifications",    // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);      // in Bromite
 
 // This feature flag does not turn off any behavior, it is only used for
 // experiment parameters.
@@ -164,8 +160,8 @@
              base::FEATURE_DISABLED_BY_DEFAULT);
 
 BASE_FEATURE(kPageTopicsBatchAnnotations,
-             "PageTopicsBatchAnnotations",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "PageTopicsBatchAnnotations",             // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);       // in Bromite
 BASE_FEATURE(kPageVisibilityBatchAnnotations,
              "PageVisibilityBatchAnnotations",
              base::FEATURE_ENABLED_BY_DEFAULT);
@@ -420,7 +416,7 @@
 
 bool ShouldPersistHintsToDisk() {
   return GetFieldTrialParamByFeatureAsBool(kOptimizationHints,
-                                           "persist_hints_to_disk", true);
+                                           "persist_hints_to_disk", false);
 }
 
 bool ShouldOverrideOptimizationTargetDecisionForMetricsPurposes(
--- a/components/optimization_guide/features.gni
+++ b/components/optimization_guide/features.gni
@@ -10,9 +10,7 @@
 declare_args() {
   # This enables build with TFLite library.
   # Currently only available for Desktop and Android.
-  build_with_tflite_lib =
-      is_android || (is_win && target_cpu != "arm64") || is_linux || is_mac ||
-      is_chromeos || is_fuchsia || is_ios
+  build_with_tflite_lib = false
 
   # You can set the variable 'build_with_internal_optimization_guide' to true
   # even in a developer build in args.gn.  Setting this variable explicitly to true will
--- a/components/permissions/features.cc
+++ b/components/permissions/features.cc
@@ -79,12 +79,12 @@
 // When enabled, use the value of the `service_url` FeatureParam as the url
 // for the Web Permission Predictions Service.
 BASE_FEATURE(kPermissionPredictionServiceUseUrlOverride,
-             "kPermissionPredictionServiceUseUrlOverride",
-             base::FEATURE_DISABLED_BY_DEFAULT);
+             "kPermissionPredictionServiceUseUrlOverride",       // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);                 // in Bromite
 
 BASE_FEATURE(kPermissionOnDeviceNotificationPredictions,
-             "PermissionOnDeviceNotificationPredictions",
-             base::FEATURE_ENABLED_BY_DEFAULT);
+             "PermissionOnDeviceNotificationPredictions",        // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT);                 // in Bromite
 
 BASE_FEATURE(kPermissionOnDeviceGeolocationPredictions,
              "PermissionOnDeviceGeolocationPredictions",
--- a/third_party/blink/common/features.cc
+++ b/third_party/blink/common/features.cc
@@ -227,12 +227,8 @@
 // predictor may preconnect/prefetch to resources/origins to make the
 // future navigations faster.
 BASE_FEATURE(kNavigationPredictor,
-             "NavigationPredictor",
-#if BUILDFLAG(IS_ANDROID)
-             base::FEATURE_ENABLED_BY_DEFAULT
-#else
-             base::FEATURE_DISABLED_BY_DEFAULT
-#endif
+             "NavigationPredictor",                // disabled by default
+             base::FEATURE_DISABLED_BY_DEFAULT     // in Bromite
 );
 
 // Anchor Element Interaction
