--- a/BUILD.gn
+++ b/BUILD.gn
@@ -670,7 +670,7 @@
       ]
     }
 
-    if (is_mac || is_win || is_android || is_linux || is_chromeos) {
+    if (is_mac || is_win || is_android || is_chromeos) {
       deps += [
         "//third_party/crashpad/crashpad:crashpad_tests",
         "//third_party/crashpad/crashpad/handler:crashpad_handler",
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -310,8 +310,6 @@
           public_deps += [
             ":xdg_mime",  # Needs to be public for installer to consume files.
           ]
-
-          data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
         }
 
         ldflags = []
@@ -1745,7 +1743,6 @@
       deps = [
         ":angle_egl_symbols",
         ":angle_gles_symbols",
-        ":chrome_crashpad_symbols",
         ":chrome_symbols",
       ]
       if (is_linux) {
@@ -1769,18 +1766,6 @@
 
       deps = [ ":chrome" ]
     }
-    extract_symbols("chrome_crashpad_symbols") {
-      binary = "$root_out_dir/chrome_crashpad_handler"
-
-      if (current_cpu == "x86") {
-        # GYP used "ia32" so keep that naming for back-compat.
-        symbol_file = "$root_out_dir/crashpad.breakpad.ia32"
-      } else {
-        symbol_file = "$root_out_dir/crashpad.breakpad.$current_cpu"
-      }
-
-      deps = [ "//components/crash/core/app:chrome_crashpad_handler" ]
-    }
 if (false) {
     extract_symbols("swiftshader_vk_symbols") {
       binary = "$root_out_dir/libvk_swiftshader.so"
--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -4795,7 +4795,7 @@
       ]
     }
 
-    if (!is_fuchsia) {
+    if (!is_fuchsia && !is_linux) {
       deps += [ "//third_party/crashpad/crashpad/client:common" ]
     }
 
--- a/chrome/test/BUILD.gn
+++ b/chrome/test/BUILD.gn
@@ -563,10 +563,6 @@
     ]
   }
 
-  if (is_linux) {
-    data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
-  }
-
   if (is_android) {
     public_deps += [
       ":test_support_ui_android",
--- a/components/crash/core/app/BUILD.gn
+++ b/components/crash/core/app/BUILD.gn
@@ -240,7 +240,7 @@
   }
 }
 
-if (is_mac || is_android || is_linux || is_chromeos) {
+if (is_mac || is_android || is_chromeos) {
   # We build a chromium-specific crashpad_handler executable so that we can
   # define custom UserStreamDataSources.
   executable("chrome_crashpad_handler") {
--- a/content/shell/BUILD.gn
+++ b/content/shell/BUILD.gn
@@ -692,7 +692,7 @@
     if (is_win) {
       data_deps +=
           [ "//third_party/crashpad/crashpad/handler:crashpad_handler" ]
-    } else if (is_linux || is_chromeos) {
+    } else if (is_chromeos) {
       data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
     }
 
--- a/headless/BUILD.gn
+++ b/headless/BUILD.gn
@@ -539,7 +539,7 @@
     deps += [ "//sandbox" ]
   }
 
-  if (is_linux || is_chromeos) {
+  if (is_chromeos) {
     data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
   }
 
