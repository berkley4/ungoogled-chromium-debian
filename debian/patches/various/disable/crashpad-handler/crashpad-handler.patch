--- a/BUILD.gn
+++ b/BUILD.gn
@@ -699,7 +699,7 @@
       ]
     }
 
-    if (is_mac || is_win || is_android || is_linux || is_chromeos) {
+    if (is_mac || is_win || is_android || is_chromeos) {
       deps += [
         "//third_party/crashpad/crashpad:crashpad_tests",
         "//third_party/crashpad/crashpad/handler:crashpad_handler",
--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -4306,7 +4306,6 @@
       "//components/webauthn/core/browser:passkey_model",
       "//services/device/public/cpp/bluetooth",
       "//services/device/public/cpp/hid",
-      "//third_party/crashpad/crashpad/client:common",
       "//third_party/zxcvbn-cpp",
       "//ui/views",
       "//ui/web_dialogs",
@@ -4316,6 +4315,10 @@
       "//ui/webui/resources/cr_components/history_embeddings:mojo_bindings",
     ]
 
+    if (!is_linux) {
+      deps += [ "//third_party/crashpad/crashpad/client:common" ]
+    }
+
     #!is_android
     # Any circular includes must depend on the target
     # "browser_public_dependencies".
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -312,7 +312,9 @@
           "//chrome/common:buildflags",
         ]
 
-        data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
+        if (!is_linux) {
+          data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
+        }
 
         ldflags = []
 
@@ -1728,7 +1730,6 @@
       deps = [
         ":angle_egl_symbols",
         ":angle_gles_symbols",
-        ":chrome_crashpad_symbols",
         ":chrome_symbols",
       ]
       if (is_linux) {
@@ -1753,17 +1754,19 @@
 
       deps = [ ":chrome" ]
     }
-    extract_symbols("chrome_crashpad_symbols") {
-      binary = "$root_out_dir/chrome_crashpad_handler"
+    if (is_chromeos) {
+      extract_symbols("chrome_crashpad_symbols") {
+        binary = "$root_out_dir/chrome_crashpad_handler"
 
-      if (current_cpu == "x86") {
-        # GYP used "ia32" so keep that naming for back-compat.
-        symbol_file = "$root_out_dir/crashpad.breakpad.ia32"
-      } else {
-        symbol_file = "$root_out_dir/crashpad.breakpad.$current_cpu"
-      }
+        if (current_cpu == "x86") {
+          # GYP used "ia32" so keep that naming for back-compat.
+          symbol_file = "$root_out_dir/crashpad.breakpad.ia32"
+        } else {
+          symbol_file = "$root_out_dir/crashpad.breakpad.$current_cpu"
+        }
 
-      deps = [ "//components/crash/core/app:chrome_crashpad_handler" ]
+        deps = [ "//components/crash/core/app:chrome_crashpad_handler" ]
+      }
     }
     extract_symbols("swiftshader_vk_symbols") {
       binary = "$root_out_dir/libvk_swiftshader.so"
--- a/chrome/test/BUILD.gn
+++ b/chrome/test/BUILD.gn
@@ -642,10 +642,6 @@
     ]
   }
 
-  if (is_linux) {
-    data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
-  }
-
   if (is_android) {
     public_deps += [
       ":test_support_ui_android",
--- a/components/crash/core/app/BUILD.gn
+++ b/components/crash/core/app/BUILD.gn
@@ -95,7 +95,7 @@
     "//third_party/crashpad/crashpad/util",
   ]
 
-  if (is_linux || is_chromeos) {
+  if (is_chromeos) {
     sources += [ "crashpad_linux.cc" ]
     data_deps = [ ":chrome_crashpad_handler" ]
   }
@@ -240,7 +240,7 @@
   }
 }
 
-if (is_mac || is_android || is_linux || is_chromeos) {
+if (is_mac || is_android || is_chromeos) {
   # We build a chromium-specific crashpad_handler executable so that we can
   # define custom UserStreamDataSources.
   executable("chrome_crashpad_handler") {
--- a/content/shell/BUILD.gn
+++ b/content/shell/BUILD.gn
@@ -757,7 +757,7 @@
     if (is_win) {
       data_deps +=
           [ "//third_party/crashpad/crashpad/handler:crashpad_handler" ]
-    } else if (is_linux || is_chromeos) {
+    } else if (is_chromeos) {
       data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
     }
 
--- a/headless/BUILD.gn
+++ b/headless/BUILD.gn
@@ -478,7 +478,7 @@
     deps += [ "//sandbox" ]
   }
 
-  if (is_linux || is_chromeos) {
+  if (is_chromeos) {
     data_deps += [ "//components/crash/core/app:chrome_crashpad_handler" ]
   }
 
