--- a/chrome/browser/extensions/BUILD.gn
+++ b/chrome/browser/extensions/BUILD.gn
@@ -841,7 +841,6 @@
     "//chrome/common/safe_browsing:proto",
     "//chrome/services/file_util:buildflags",
     "//chrome/services/file_util/public/mojom:mojom",
-    "//chrome/services/removable_storage_writer/public/mojom",
     "//components/affiliations/core/browser:affiliations",
     "//components/app_constants",
     "//components/autofill/content/browser",
@@ -995,6 +994,10 @@
     "//url",
   ]
 
+  if (!is_linux) {
+    deps += [ "//chrome/services/removable_storage_writer/public/mojom" ]
+  }
+
   if (enable_supervised_users) {
     deps += [ "//components/supervised_user/core/browser" ]
   }
--- a/chrome/test/BUILD.gn
+++ b/chrome/test/BUILD.gn
@@ -1771,7 +1771,6 @@
       "//chrome/common/privacy_budget:test_support",
       "//chrome/renderer",
       "//chrome/renderer/companion/visual_query:browser_tests",
-      "//chrome/services/removable_storage_writer:lib",
       "//chrome/test/data/webui:resources_grit",
       "//chrome/test/data/webui/mojo:mojo_bindings",
       "//chrome/test/media_router/access_code_cast:access_code_cast_integration_base",
@@ -2092,6 +2091,10 @@
       "//v8",
     ]
 
+    if (!is_linux) {
+      deps += [ "//chrome/services/removable_storage_writer:lib" ]
+    }
+
     if (is_chromeos) {
       deps += [
         "//chromeos/dbus/dlp:dlp",
@@ -9279,7 +9282,6 @@
       "//chrome/common/apps/platform_apps",
       "//chrome/common/extensions:extension_features_unittest",
       "//chrome/common/extensions/api",
-      "//chrome/utility/image_writer:unit_tests",
       "//components/enterprise:test_support",
       "//components/password_manager/core/browser/features:password_features",
       "//components/password_manager/core/browser/sharing",
@@ -9310,6 +9312,10 @@
       "//tools/json_schema_compiler/test:unit_tests",
     ]
 
+    if (!is_linux) {
+      deps += [ "//chrome/utility/image_writer:unit_tests" ]
+    }
+
     if (enable_service_discovery) {
       sources += [ "../browser/extensions/api/mdns/mdns_api_unittest.cc" ]
     }
--- a/chrome/utility/BUILD.gn
+++ b/chrome/utility/BUILD.gn
@@ -150,16 +150,24 @@
   if (enable_extensions) {
     deps += [
       "//chrome/common/extensions/api",
-      "//chrome/services/removable_storage_writer:lib",
-      "//chrome/utility/image_writer",
     ]
 
     public_deps += [
       "//chrome/common/extensions/api",
-      "//chrome/services/removable_storage_writer/public/mojom",
       "//mojo/public/cpp/bindings",
     ]
 
+    if (!is_linux) {
+      deps += [
+        "//chrome/services/removable_storage_writer:lib",
+        "//chrome/utility/image_writer",
+      ]
+
+      public_deps += [
+        "//chrome/services/removable_storage_writer/public/mojom",
+      ]
+    }
+
     # Prevent wininet from loading in the renderer. http://crbug.com/460679
     if (is_win) {
       ldflags = [ "/DELAYLOAD:wininet.dll" ]
--- a/chrome/utility/services.cc
+++ b/chrome/utility/services.cc
@@ -85,7 +85,7 @@
 #include "chrome/services/file_util/document_analysis_service.h"  // nogncheck
 #endif
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if BUILDFLAG(ENABLE_EXTENSIONS) && !BUILDFLAG(IS_LINUX)
 #include "chrome/services/removable_storage_writer/public/mojom/removable_storage_writer.mojom.h"
 #include "chrome/services/removable_storage_writer/removable_storage_writer.h"
 #endif
@@ -286,7 +286,7 @@
 }
 #endif
 
-#if BUILDFLAG(ENABLE_EXTENSIONS)
+#if BUILDFLAG(ENABLE_EXTENSIONS) && !BUILDFLAG(IS_LINUX)
 auto RunRemovableStorageWriter(
     mojo::PendingReceiver<chrome::mojom::RemovableStorageWriter> receiver) {
   return std::make_unique<RemovableStorageWriter>(std::move(receiver));
@@ -485,7 +485,7 @@
   services.Add(RunDocumentAnalysis);
 #endif
 
-#if BUILDFLAG(ENABLE_EXTENSIONS) && !BUILDFLAG(IS_WIN)
+#if BUILDFLAG(ENABLE_EXTENSIONS) && !BUILDFLAG(IS_WIN) && !BUILDFLAG(IS_LINUX)
   // On Windows, this service runs in an elevated utility process.
   services.Add(RunRemovableStorageWriter);
 #endif
