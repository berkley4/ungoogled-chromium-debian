From 07a2e4a07bb6e3f7435682fc924c843c6e89f494 Mon Sep 17 00:00:00 2001
From: Austin Sullivan <asully@chromium.org>
Date: Thu, 09 Dec 2021 20:13:43 +0000
Subject: [PATCH] Add checks in DataPipeReady

DataPipeReady is passed a MojoResult which it does not use. If `result`
is MOJO_RESULT_FAILED_PRECONDITION, this will be improperly
interpreted as a closed pipe.

Bug: 1268903
Change-Id: I1cc7ca80686d761f6bd122f0cde2a70018c7bf50
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3324364
Reviewed-by: Victor Costan <pwnall@chromium.org>
Commit-Queue: Austin Sullivan <asully@chromium.org>
Cr-Commit-Position: refs/heads/main@{#950235}
---

--- a/storage/browser/blob/blob_builder_from_stream.cc
+++ b/storage/browser/blob/blob_builder_from_stream.cc
@@ -10,6 +10,7 @@
 #include "base/metrics/histogram_macros.h"
 #include "base/task/post_task.h"
 #include "base/task/thread_pool.h"
+#include "mojo/public/c/system/types.h"
 #include "mojo/public/cpp/bindings/associated_remote.h"
 #include "storage/browser/blob/blob_data_item.h"
 #include "storage/browser/blob/blob_storage_context.h"
@@ -88,10 +89,28 @@
 
  private:
   void DataPipeReady(MojoResult result, const mojo::HandleSignalsState& state) {
+    if (result != MOJO_RESULT_OK) {
+      // We requested a trap on a condition that can never occur. The state of
+      // `pipe_` likely changed.
+      DCHECK(result == MOJO_RESULT_FAILED_PRECONDITION);
+      InvokeDone(mojo::ScopedDataPipeConsumerHandle(), PassProgressClient(),
+                 /*success=*/true, current_offset_);
+      delete this;
+      return;
+    }
+
     while (current_offset_ < max_bytes_to_read_) {
       const void* data;
       uint32_t size;
       result = pipe_->BeginReadData(&data, &size, MOJO_READ_DATA_FLAG_NONE);
+      if (result == MOJO_RESULT_INVALID_ARGUMENT) {
+        // `pipe_` is not actually a ScopedDataPipeConsumerHandle.
+        InvokeDone(mojo::ScopedDataPipeConsumerHandle(), PassProgressClient(),
+                   /*success=*/false, /*bytes_written=*/0);
+        delete this;
+        return;
+      }
+
       if (result == MOJO_RESULT_SHOULD_WAIT) {
         watcher_.ArmOrNotify();
         return;
