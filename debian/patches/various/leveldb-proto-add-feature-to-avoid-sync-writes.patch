From 62afed9794bfbfd147f9dfdd491dae3760bb7b86 Mon Sep 17 00:00:00 2001
From: Fran√ßois Doray <fdoray@chromium.org>
Date: Thu, 06 Jun 2024 19:32:21 +0000
Subject: [PATCH] [leveldb_proto] Add feature to avoid synchronous writes.

The feature will be used to measure the impact of avoiding synchronous
writes by leveldb_proto. The last asynchronous writes may be lost in
case of operating system or power failure (note: a mere process crash
wouldn't prevent a write from completing), but leveldb_proto clients
don't have strong persistence requirements (see
https://docs.google.com/document/d/1nd74W_uUZrU0sOFjWO9xyxFhQPIR1uBcJyoRWkw0_LA/edit?usp=sharing). Database corruption is not a concern due
to leveldb's journaling system. More details
at https://github.com/google/leveldb/blob/main/doc/index.md#synchronous-writes

Bug: 40287434
Change-Id: I0bfb16a5a95dabe59b7783df8688d85059b8d132
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5597519
Commit-Queue: Francois Pierre Doray <fdoray@chromium.org>
Reviewed-by: Siddhartha S <ssid@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1311479}
---

--- a/components/leveldb_proto/internal/leveldb_database.cc
+++ b/components/leveldb_proto/internal/leveldb_database.cc
@@ -9,6 +9,7 @@
 #include <vector>
 
 #include "base/check.h"
+#include "base/feature_list.h"
 #include "base/files/file_path.h"
 #include "base/files/file_util.h"
 #include "base/functional/bind.h"
@@ -40,6 +41,23 @@
   return base::StartsWith(key, prefix, base::CompareCase::SENSITIVE);
 }
 
+// Controls whether database writes are asynchronous. This is expected to reduce
+// disk contention and improve overall browser speed. The last asynchronous
+// writes may be lost in case of operating system or power failure (note: a mere
+// process crash wouldn't prevent a write from completing), but leveldb_proto
+// clients don't have strong persistence requirements (see
+// https://docs.google.com/document/d/1nd74W_uUZrU0sOFjWO9xyxFhQPIR1uBcJyoRWkw0_LA/edit?usp=sharing).
+// Database corruption is not a concern due to leveldb's journaling system.
+// More details at
+// https://github.com/google/leveldb/blob/main/doc/index.md#synchronous-writes.
+//
+// TODO(crbug.com/40287434): By the end of 2024, we should have measured the
+// potential gains of avoiding synchronous writes in //components/leveldb_proto/
+// and decided whether to move forward with this change.
+BASE_FEATURE(kLevelDBProtoAsyncWrite,
+             "LevelDBProtoAsyncWrite",
+             base::FEATURE_DISABLED_BY_DEFAULT);
+
 }  // namespace
 
 Enums::KeyIteratorAction LevelDB::ComputeIteratorAction(
@@ -142,7 +160,7 @@
     updates.Delete(leveldb::Slice(key));
 
   leveldb::WriteOptions options;
-  options.sync = true;
+  options.sync = !base::FeatureList::IsEnabled(kLevelDBProtoAsyncWrite);
 
   *status = db_->Write(options, &updates);
   if (status->ok())
@@ -189,7 +207,7 @@
   }
 
   leveldb::WriteOptions write_options;
-  write_options.sync = true;
+  write_options.sync = !base::FeatureList::IsEnabled(kLevelDBProtoAsyncWrite);
   *status = db_->Write(write_options, &updates);
   if (status->ok())
     return true;
