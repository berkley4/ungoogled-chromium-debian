From ee556940c3bfc75d3a24a37430a1d39a7bc2c22e Mon Sep 17 00:00:00 2001
From: Hirokazu Honda <hiroh@chromium.org>
Date: Thu, 23 Nov 2023 05:21:55 +0000
Subject: [PATCH] media/VideoFrame: Enable to wrap larger visible_rect than original one

VideoFrame::WrapVideoFrame() has a DCHECK that a new visible rectangle
is contained by the visible rectangle of the original video frame.
However, it is safe that the new visible rectangle is contained by the
coded area of the original video frame. This CL removes the DCHECK.

Bug: b:311575550
Test: media_unittests
Test: VP9 L2T3_KEY is not crashed on atlas.
Change-Id: I32ae7b568bdea00c142a25856151c964405f4d4d
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5051582
Commit-Queue: Hirokazu Honda <hiroh@chromium.org>
Reviewed-by: Dan Sanders <sandersd@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1228287}
---

--- a/media/base/video_frame.cc
+++ b/media/base/video_frame.cc
@@ -848,8 +848,6 @@
     VideoPixelFormat format,
     const gfx::Rect& visible_rect,
     const gfx::Size& natural_size) {
-  DCHECK(frame->visible_rect().Contains(visible_rect));
-
   if (!AreValidPixelFormatsForWrap(frame->format(), format)) {
     DLOG(ERROR) << __func__ << " Invalid format conversion."
                 << VideoPixelFormatToString(frame->format()) << " to "
--- a/media/base/video_frame_unittest.cc
+++ b/media/base/video_frame_unittest.cc
@@ -375,6 +375,7 @@
                                        visible_rect, natural_size);
     base_frame->AddDestructionObserver(base::BindOnce(
         &FrameNoLongerNeededCallback, &base_frame_done_callback_was_run));
+    ASSERT_TRUE(frame);
     EXPECT_EQ(base_frame->coded_size(), frame->coded_size());
     EXPECT_EQ(base_frame->data(VideoFrame::kYPlane),
               frame->data(VideoFrame::kYPlane));
@@ -398,6 +399,7 @@
     natural_size = visible_rect.size();
     frame2 = VideoFrame::WrapVideoFrame(frame, frame->format(), visible_rect,
                                         natural_size);
+    ASSERT_TRUE(frame2);
     EXPECT_EQ(base_frame->coded_size(), frame2->coded_size());
     EXPECT_EQ(base_frame->data(VideoFrame::kYPlane),
               frame2->data(VideoFrame::kYPlane));
@@ -407,6 +409,38 @@
     EXPECT_EQ(natural_size, frame2->natural_size());
   }
 
+  {
+    auto base_frame = VideoFrame::CreateBlackFrame(gfx::Size(kWidth, kHeight));
+    ASSERT_TRUE(base_frame);
+    // WrapVideoFrame is successful with the visible_rect that is not contained
+    // by |base_frame|'s visible rectangle, but contained by |base_frame|'s
+    // coded size area.
+    const gfx::Rect larger_visible_rect(0, 0, 3, 3);
+    auto frame3 = VideoFrame::WrapVideoFrame(base_frame, base_frame->format(),
+                                             larger_visible_rect,
+                                             larger_visible_rect.size());
+    ASSERT_TRUE(frame3);
+    EXPECT_EQ(base_frame->coded_size(), frame3->coded_size());
+    EXPECT_EQ(base_frame->data(VideoFrame::kYPlane),
+              frame3->data(VideoFrame::kYPlane));
+    EXPECT_NE(base_frame->visible_rect(), frame3->visible_rect());
+    EXPECT_EQ(larger_visible_rect, frame3->visible_rect());
+    EXPECT_NE(base_frame->natural_size(), frame3->natural_size());
+    EXPECT_EQ(larger_visible_rect.size(), frame3->natural_size());
+    // WrapVideoFrame() fails if the new visible rect is larger than
+    // |base_frame|'s coded size area.
+    const gfx::Rect too_large_visible_rect(0, 0, 5, 5);
+    EXPECT_FALSE(VideoFrame::WrapVideoFrame(base_frame, base_frame->format(),
+                                            too_large_visible_rect,
+                                            too_large_visible_rect.size()));
+    // WrapVideoFrame() fails if the new visible rect is not contained by
+    // |base_frame|'s coded size area.
+    const gfx::Rect non_contained_visible_rect(3, 3, 2, 2);
+    EXPECT_FALSE(VideoFrame::WrapVideoFrame(base_frame, base_frame->format(),
+                                            non_contained_visible_rect,
+                                            non_contained_visible_rect.size()));
+  }
+
   // At this point |base_frame| is held by |frame|, |frame2|.
   EXPECT_FALSE(base_frame_done_callback_was_run);
   EXPECT_FALSE(wrapped_frame_done_callback_was_run);
