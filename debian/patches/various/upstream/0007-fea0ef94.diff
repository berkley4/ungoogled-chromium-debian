From fea0ef943ecd3fe46b6ec1d0717fcc9d2fa12eb8 Mon Sep 17 00:00:00 2001
From: Andrey Kosyakov <caseq@chromium.org>
Date: Thu, 27 Jun 2024 16:10:41 +0000
Subject: [PATCH] Do not crash while wrapping DOMArrayBuffer with no backing store

Bug: 345684057, 349015781
Change-Id: I9dfa4bcfc517eadaac6bdc357ed7936822954f3b
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5662176
Reviewed-by: Daniel Cheng <dcheng@chromium.org>
Reviewed-by: Michael Lippautz <mlippautz@chromium.org>
Commit-Queue: Daniel Cheng <dcheng@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1320419}
---

--- a/PRESUBMIT.py
+++ b/PRESUBMIT.py
@@ -848,6 +848,7 @@
        # Needed for interop with third-party library.
        '^third_party/blink/renderer/core/typed_arrays/array_buffer/' +
          'array_buffer_contents\.(cc|h)',
+       '^third_party/blink/renderer/core/typed_arrays/dom_array_buffer\.cc',
        '^third_party/blink/renderer/bindings/core/v8/' +
          'v8_wasm_response_extensions.cc',
        '^gin/array_buffer\.(cc|h)',
--- a/third_party/blink/renderer/core/typed_arrays/dom_array_buffer.cc
+++ b/third_party/blink/renderer/core/typed_arrays/dom_array_buffer.cc
@@ -260,8 +260,11 @@
   v8::Local<v8::ArrayBuffer> wrapper;
   {
     v8::Context::Scope context_scope(script_state->GetContext());
-    wrapper = v8::ArrayBuffer::New(script_state->GetIsolate(),
-                                   Content()->BackingStore());
+    std::shared_ptr<v8::BackingStore> backing_store = Content()->BackingStore();
+    wrapper = backing_store
+                  ? v8::ArrayBuffer::New(script_state->GetIsolate(),
+                                         std::move(backing_store))
+                  : v8::ArrayBuffer::New(script_state->GetIsolate(), 0);
 
     if (!detach_key_.IsEmpty()) {
       wrapper->SetDetachKey(detach_key_.Get(script_state->GetIsolate()));
--- a/third_party/blink/renderer/core/typed_arrays/dom_array_buffer_test.cc
+++ b/third_party/blink/renderer/core/typed_arrays/dom_array_buffer_test.cc
@@ -38,4 +38,13 @@
   ASSERT_EQ(true, buffer->IsDetached());
 }
 
+TEST(DOMArrayBufferTest, WrapEmpty) {
+  test::TaskEnvironment task_environment;
+  V8TestingScope v8_scope;
+  ArrayBufferContents src;
+  auto* buffer = DOMArrayBuffer::Create(src);
+  v8::Local<v8::Value> wrapped = buffer->Wrap(v8_scope.GetScriptState());
+  ASSERT_FALSE(wrapped.IsEmpty());
+}
+
 }  // namespace blink
--- /dev/null
+++ b/third_party/blink/web_tests/http/tests/mojo/shared-buffer-crash.html
@@ -0,0 +1,16 @@
+<!DOCTYPE html>
+<title>Mojo shared buffer tests</title>
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script>
+
+let kBufferSize = 32;
+
+test(() => {
+  let {handle} = Mojo.createSharedBuffer(kBufferSize);
+  let {result, buffer} = handle.mapBuffer(kBufferSize, kBufferSize);
+  assert_equals(result, Mojo.RESULT_OK);
+  assert_true(buffer instanceof ArrayBuffer);
+}, "Attempt to map beyond buffer size does not crash");
+
+</script>
