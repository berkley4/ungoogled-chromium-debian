From af11ae04756cddd68d2c43718149f16178260056 Mon Sep 17 00:00:00 2001
From: Fran√ßois Doray <fdoray@chromium.org>
Date: Thu, 21 Mar 2024 20:43:43 +0000
Subject: [PATCH] [discarding] Fix crash when navigating a discarded tab.

We have crash reports in this stack:

  logging::CheckFailure
  content::NavigationControllerImpl::NavigateToExistingPendingEntry
  content::NavigationControllerImpl::LoadIfNecessary
  resource_coordinator::TabLifecycleUnitSource::TabLifecycleUnit::Load
  BrowserList::SetLastActive
  BrowserView::OnWidgetActivationChanged
  views::Widget::OnNativeWidgetActivationChanged
  wm::FocusController::SetActiveWindow
  wm::FocusController::FocusAndActivateWindow
  content::WebContentsImpl::NotifySwappedFromRenderManager
  content::RenderFrameHostManager::CommitPending

 content::RenderFrameHostManager::PerformEarlyRenderFrameHostSwapIfNeeded
  content::RenderFrameHostManager::GetFrameHostForNavigation
  content::RenderFrameHostManager::DidCreateNavigationRequest
  content::FrameTreeNode::TakeNavigationRequest
  content::Navigator::Navigate
  content::NavigationControllerImpl::NavigateToExistingPendingEntry

A focus change occurring as part of navigating a discarded tab makes
TabLifecycleUnit reload the tab. This creates a nested navigation,
which is disallowed. Normally, navigating a discarded tab triggers
a call to TabLifecycleUnit::DidStartLoading() and changes the tab's
state from DISCARDED to ACTIVE, preventing future focus changes from
triggering a discarded tab reload. However, in this case, the focus
change occurs before DidStartLoading() is invoked.

The solution is to skip the reload if WebContents::WasDiscarded() is
false (this bit is unset early when navigating a discarded tab).

Unfortunately, I wasn't able to reproduce the crash to test that the
fix works. Normally, WebContentsImpl::NotifySwappedFromRenderManager
-> WebContentsImpl::NotifyPrimaryMainFrameProcessIsAlive only
triggers a focus change if the `primary_main_frame_process_status_`
is not TERMINATION_STATUS_STILL_RUNNING. However, a discarded tab
should have `primary_main_frame_process_status_` =
TERMINATION_STATUS_STILL_RUNNING so no focus change should occur.

The crash could be related to crrev.com/c/4847998

Bug: 40075246
Change-Id: Ia0d3489f1110ca67b8da06b260496703bd632f56
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5301583
Reviewed-by: Thomas Lukaszewicz <tluk@chromium.org>
Reviewed-by: Alex Moshchuk <alexmos@chromium.org>
Commit-Queue: Francois Pierre Doray <fdoray@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1276475}
---

--- a/chrome/browser/resource_coordinator/tab_lifecycle_unit.cc
+++ b/chrome/browser/resource_coordinator/tab_lifecycle_unit.cc
@@ -214,10 +214,17 @@
 
   switch (GetState()) {
     case LifecycleUnitState::DISCARDED: {
-      // Reload the tab.
+      // Transition to the active state.
       SetState(LifecycleUnitState::ACTIVE, StateChangeReason::USER_INITIATED);
-      bool loaded = Load();
-      DCHECK(loaded);
+
+      // Load the tab if it's discarded. It will typically be discarded, but
+      // might not be if this is invoked as part of reloading the tab explicitly
+      // and we haven't been notified of the ongoing load yet
+      // (crbug.com/40075246).
+      if (web_contents()->WasDiscarded()) {
+        bool loaded = Load();
+        DCHECK(loaded);
+      }
       break;
     }
 
