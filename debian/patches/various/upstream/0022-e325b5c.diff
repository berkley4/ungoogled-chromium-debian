From e325b5c7cdbe6f54584a1fbef5591ed81a0b629f Mon Sep 17 00:00:00 2001
From: Nathan Memmott <memmott@chromium.org>
Date: Fri, 13 Sep 2024 19:08:44 +0000
Subject: [PATCH] Change Observer: Fix crash when deleting large folder

The Inotify FilePathWatcher can report an event out of its scope if the
watched directory is deleted. When the watched directory is deleted, it
clears out the recursive watches, but its possible that it does that
right before reporting an event for a descendant.

This fixes it by calculating the reported path before clearing out the
recursive watches.

Fixed: 365839167
Change-Id: Ib5d487e236bc6ab80840c94896c5c980e183a873
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5852175
Reviewed-by: Christine Hollingsworth <christinesm@chromium.org>
Commit-Queue: Nathan Memmott <memmott@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1355330}
---

--- a/content/browser/file_system_access/file_path_watcher/file_path_watcher_inotify.cc
+++ b/content/browser/file_system_access/file_path_watcher/file_path_watcher_inotify.cc
@@ -778,6 +778,8 @@
   }
 
   if (Contains(recursive_paths_by_watch_, fired_watch)) {
+    base::FilePath child_path =
+        recursive_paths_by_watch_[fired_watch].Append(child);
     if (!did_update) {
       if (!UpdateRecursiveWatches(
               fired_watch,
@@ -785,7 +787,7 @@
         return base::unexpected(ChangeProcessError::kLimitExceeded);
       }
     }
-    return base::ok(recursive_paths_by_watch_[fired_watch].Append(child));
+    return base::ok(child_path);
   }
 
   return base::unexpected(ChangeProcessError::kNotFound);
--- a/content/browser/file_system_access/file_path_watcher/file_path_watcher_unittest.cc
+++ b/content/browser/file_system_access/file_path_watcher/file_path_watcher_unittest.cc
@@ -3279,12 +3279,8 @@
                         HasModifiedPath(parent)),
          testing::AllOf(HasPath(report_modified_path() ? child : parent),
                         IsDirectory(), HasModifiedPath(child)),
-         // TODO(crbug.com/40263766): inotify incorrectly reports this
-         // deletion on the path of just "grandchild" rather than on
-         // "/absolute/path/blah/blah/parent/child/grandchild".
-         testing::AllOf(
-             HasPath(report_modified_path() ? grandchild.BaseName() : parent),
-             IsFile(), HasModifiedPath(grandchild.BaseName()))});
+         testing::AllOf(HasPath(report_modified_path() ? grandchild : parent),
+                        IsFile(), HasModifiedPath(grandchild))});
   } else {
     // Do not expect changes to `grandchild` when watching `parent`
     // non-recursively.
