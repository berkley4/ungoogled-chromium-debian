From 89555ad860acbba5a43c861a981850afa75dd2b2 Mon Sep 17 00:00:00 2001
From: Anders Hartvoll Ruud <andruud@chromium.org>
Date: Fri, 13 Sep 2024 21:47:12 +0000
Subject: [PATCH] Don't Consume into block for var()/env()

Fixes crash for invalid var(), e.g. var(--x ()).

Bug: 40941162
Change-Id: I1af790d4ce00659cff66076731110e055c98d0f3
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5860522
Commit-Queue: Anders Hartvoll Ruud <andruud@chromium.org>
Reviewed-by: Steinar H Gunderson <sesse@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1355439}
---

--- a/third_party/blink/renderer/core/css/parser/css_variable_parser.cc
+++ b/third_party/blink/renderer/core/css/parser/css_variable_parser.cc
@@ -340,9 +340,10 @@
     return true;
   }
 
-  if (stream.Consume().GetType() != kCommaToken) {
+  if (stream.Peek().GetType() != kCommaToken) {
     return false;
   }
+  stream.Consume();  // kCommaToken
 
   // Parse the fallback value.
   if (!ConsumeUnparsedValue(stream, /*restricted_value=*/false,
@@ -388,14 +389,13 @@
     if (stream.AtEnd()) {
       return true;
     }
-    token = stream.ConsumeIncludingWhitespace();
-  } else {
-    token = stream.Consume();
   }
+
   // Otherwise we need a comma followed by an optional fallback value.
-  if (token.GetType() != kCommaToken) {
+  if (stream.Peek().GetType() != kCommaToken) {
     return false;
   }
+  stream.Consume();  // kCommaToken
 
   // Parse the fallback value.
   if (!ConsumeUnparsedValue(stream, /*restricted_value=*/false,
--- /dev/null
+++ b/third_party/blink/web_tests/external/wpt/css/css-env/env-parsing.html
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<title>CSS Environment Variables: env() parsing</title>
+<link rel="help" href="https://drafts.csswg.org/css-env/">
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script src="/css/support/parsing-testcommon.js"></script>
+<div id="target"></div>
+
+<script>
+
+test_valid_value('width', 'env(safe-area-inset-top)');
+test_valid_value('width', 'env(safe-area-inset-top,)');
+test_valid_value('width', 'env(safe-area-inset-top, )');
+
+test_invalid_value('width', 'env(safe-area-inset-top ())');
+test_invalid_value('width', 'env(safe-area-inset-top () )');
+test_invalid_value('width', 'env(safe-area-inset-top() )');
+test_invalid_value('width', 'env(safe-area-inset-top (),)');
+test_invalid_value('width', 'env(safe-area-inset-top(),)');
+
+</script>
--- /dev/null
+++ b/third_party/blink/web_tests/external/wpt/css/css-variables/var-parsing.html
@@ -0,0 +1,21 @@
+<!DOCTYPE html>
+<title>CSS Custom Properties: var() parsing</title>
+<link rel="help" href="https://drafts.csswg.org/css-variables">
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script src="/css/support/parsing-testcommon.js"></script>
+<div id="target"></div>
+
+<script>
+
+test_valid_value('width', 'var(--x)');
+test_valid_value('width', 'var(--x,)');
+test_valid_value('width', 'var(--x, )');
+
+test_invalid_value('width', 'var(--x ())');
+test_invalid_value('width', 'var(--x () )');
+test_invalid_value('width', 'var(--x() )');
+test_invalid_value('width', 'var(--x (),)');
+test_invalid_value('width', 'var(--x(),)');
+
+</script>
