From f3f5fd21bdb91b054bd13aee522fd44212f5c85d Mon Sep 17 00:00:00 2001
From: Anders Hartvoll Ruud <andruud@chromium.org>
Date: Fri, 13 Sep 2024 21:57:41 +0000
Subject: [PATCH] Don't consume into block in css_parsing_utils::ConsumeSteps

Fixes crash for e.g. steps(2, ()).

Bug: 40941162
Change-Id: I50eeb55cb7b8c837082ad620ba3b732026cf641c
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5860080
Reviewed-by: Steinar H Gunderson <sesse@chromium.org>
Commit-Queue: Anders Hartvoll Ruud <andruud@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1355443}
---

--- a/third_party/blink/renderer/core/css/properties/css_parsing_utils.cc
+++ b/third_party/blink/renderer/core/css/properties/css_parsing_utils.cc
@@ -326,7 +326,7 @@
     StepsTimingFunction::StepPosition position =
         StepsTimingFunction::StepPosition::END;
     if (ConsumeCommaIncludingWhitespace(stream)) {
-      switch (stream.ConsumeIncludingWhitespace().Id()) {
+      switch (stream.Peek().Id()) {
         case CSSValueID::kStart:
           position = StepsTimingFunction::StepPosition::START;
           break;
@@ -354,6 +354,7 @@
         default:
           return nullptr;
       }
+      stream.ConsumeIncludingWhitespace();  // kIdentToken
     }
 
     if (!stream.AtEnd()) {
--- /dev/null
+++ b/third_party/blink/web_tests/external/wpt/css/css-animations/parsing/animation-timing-function-invalid.html
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<title>CSS Animations: animation-timing-function parsing (invalid)</title>
+<link rel="help" href="https://drafts.csswg.org/css-animations-2/#animation-timing-function">
+<script src="/resources/testharness.js"></script>
+<script src="/resources/testharnessreport.js"></script>
+<script src="/css/support/parsing-testcommon.js"></script>
+<script>
+test_invalid_value("animation-timing-function", "steps(2,()start)");
+test_invalid_value("animation-timing-function", "steps(2,() start)");
+test_invalid_value("animation-timing-function", "steps(2, ()start)");
+test_invalid_value("animation-timing-function", "steps(2())");
+test_invalid_value("animation-timing-function", "steps(2 ())");
+test_invalid_value("animation-timing-function", "steps(2,())");
+test_invalid_value("animation-timing-function", "steps(2, ())");
+</script>
--- a/third_party/blink/web_tests/external/wpt/css/css-transitions/parsing/transition-timing-function-invalid.html
+++ b/third_party/blink/web_tests/external/wpt/css/css-transitions/parsing/transition-timing-function-invalid.html
@@ -30,6 +30,13 @@
 test_invalid_value("transition-timing-function", "steps(0, jump-end)");
 test_invalid_value("transition-timing-function", "steps(0, jump-both)");
 test_invalid_value("transition-timing-function", "steps(1, jump-none)");
+test_invalid_value("transition-timing-function", "steps(2,()start)");
+test_invalid_value("transition-timing-function", "steps(2,() start)");
+test_invalid_value("transition-timing-function", "steps(2, ()start)");
+test_invalid_value("transition-timing-function", "steps(2())");
+test_invalid_value("transition-timing-function", "steps(2 ())");
+test_invalid_value("transition-timing-function", "steps(2,())");
+test_invalid_value("transition-timing-function", "steps(2, ())");
 
 test_invalid_value("transition-timing-function", "initial, cubic-bezier(0, -2, 1, 3)");
 test_invalid_value("transition-timing-function", "cubic-bezier(0, -2, 1, 3), initial");
