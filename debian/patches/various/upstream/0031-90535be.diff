From 90535bebb9fe4f663ef0fb8856bea11b99826420 Mon Sep 17 00:00:00 2001
From: Keren Zhu <kerenzhu@chromium.org>
Date: Sat, 24 Aug 2024 02:23:46 +0000
Subject: [PATCH] views: delay deleting text fragments in StyledLabel

StyledLabel re-creates text fragment views during layout. Those views
might still be referenced on the stack. When the stack unwinds, it
causes UaFs.

This patch stores the views to be deleted in a storage. This effectively
delays the views destroy until the next layout.

Bug: 361639416
Change-Id: Ide6cf7a3b8228bc8941f2792b9748e486bbc0364
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5807245
Commit-Queue: Keren Zhu <kerenzhu@chromium.org>
Code-Coverage: findit-for-me@appspot.gserviceaccount.com <findit-for-me@appspot.gserviceaccount.com>
Reviewed-by: Weidong Liu <weidongliu@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1346304}
---

--- a/ui/views/controls/styled_label.cc
+++ b/ui/views/controls/styled_label.cc
@@ -625,10 +625,14 @@
 }
 
 void StyledLabel::RemoveOrDeleteAllChildViews() {
+  pending_delete_views_.clear();
   while (children().size() > 0) {
     std::unique_ptr<View> view = RemoveChildViewT(children()[0]);
-    if (view->GetProperty(kStyledLabelCustomViewKey))
+    if (view->GetProperty(kStyledLabelCustomViewKey)) {
       custom_views_.push_back(std::move(view));
+    } else {
+      pending_delete_views_.push_back(std::move(view));
+    }
   }
 }
 
--- a/ui/views/controls/styled_label.h
+++ b/ui/views/controls/styled_label.h
@@ -262,6 +262,11 @@
   // layout.
   std::list<std::unique_ptr<View>> custom_views_;
 
+  // Temporarily owns the views to be deleted during layout. These views might
+  // still be referenced on the stack. If we delete them immediately, UaFs
+  // could happen when the stack unwinds.
+  std::vector<std::unique_ptr<View>> pending_delete_views_;
+
   // The ranges that should be linkified, sorted by start position.
   StyleRanges style_ranges_;
 
--- a/ui/views/controls/styled_label_unittest.cc
+++ b/ui/views/controls/styled_label_unittest.cc
@@ -920,4 +920,35 @@
   EXPECT_EQ(data.role, ax::mojom::Role::kLink);
 }
 
+// Regression test for crbug.com/361639416.
+// Tests that the child views (text fragments) are still alive after layout.
+TEST_F(StyledLabelTest, OldChildViewsAreAliveAfterLayout) {
+  class ViewDestroyObserser : public ViewObserver {
+   public:
+    MOCK_METHOD(void, OnViewIsDeleting, (View*), (override));
+  };
+
+  ViewDestroyObserser view_destroy_observer;
+
+  const std::string text("This is a test block of text.");
+  StyledLabel* styled = InitStyledLabel(text);
+
+  styled->AddStyleRange(
+      gfx::Range(0, 1),
+      StyledLabel::RangeStyleInfo::CreateForLink(base::RepeatingClosure()));
+
+  EXPECT_EQ(styled->GetFirstLinkForTesting(), nullptr);
+  styled->SetBounds(0, 0, 1000, 1000);
+  test::RunScheduledLayout(styled);
+
+  views::View* link = styled->GetFirstLinkForTesting();
+  EXPECT_NE(link, nullptr);
+  link->AddObserver(&view_destroy_observer);
+  EXPECT_CALL(view_destroy_observer, OnViewIsDeleting(testing::_)).Times(0);
+  styled->SetBounds(0, 0, 10, 1000);
+  test::RunScheduledLayout(styled);
+
+  link->RemoveObserver(&view_destroy_observer);
+}
+
 }  // namespace views
