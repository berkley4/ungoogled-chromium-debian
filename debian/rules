#!/usr/bin/make -f

RT_DIR   := $(CURDIR)
DB_DIR   := $(RT_DIR)/debian
DU_DIR   := $(DB_DIR)/devutils
SH_DIR   := $(DB_DIR)/shims
UC_DIR   := $(DB_DIR)/submodules/ungoogled-chromium
UL_DIR   := $(UC_DIR)/utils
UP_DIR   := $(UC_DIR)/patches
DS_CACHE := $(DB_DIR)/domsubcache.tar.gz
OUT_DIR  := out/Release

# Changelog and control template variables
VERSION  ?= $(file < $(UC_DIR)/chromium_version.txt)-1
RELEASE  := stable
AUTHOR   := ungoogled-chromium Maintainers <github@null.invalid>
DATETIME := $(shell date -R)

# Assign the clang toolchain to use
LLVM_DIR    := $(RT_DIR)/third_party/llvm-build/Release+Asserts/bin
export PATH := $(LLVM_DIR):$(PATH)

# Use parallel jobs if requested
JOBS := 1
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
JOBS := $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

# Find the distribution codename for this release
CODENAME := $(patsubst %:,,$(shell lsb_release -c))

# Start with the upstream Ungoogled Chromium flags
GN_FLAGS := $(shell tr "\n" " " < $(UC_DIR)/flags.gn | sed 's/"/\\"/g')

# Add our downstream Debian flags
GN_FLAGS += \
        is_official_build=true \
        blink_enable_generated_code_formatting=false \
        blink_symbol_level=0 \
        symbol_level=0 \
        v8_symbol_level=0 \
        ffmpeg_branding=\"ChromeOS\" \
        proprietary_codecs=true \
        angle_enable_swiftshader=false \
        build_dawn_tests=false \
        enable_swiftshader=false \
        enable_vr=false \
        link_pulseaudio=true \
        rtc_link_pipewire=true \
        rtc_use_pipewire=true \
        use_cfi_cast=true \
        use_dawn=false \
        use_gnome_keyring=false \
        use_kerberos=false \
        use_sysroot=false \
        use_text_section_splitting=true \
        v8_enable_pointer_compression=true \
        v8_enable_zone_compression=true

# Currently omitted from base (stable)
# harfbuzz-ng, icu, ffmpeg, jsoncpp, libjpeg, libpng, libvpx, openh264, re2, snappy
SYS_LIBS :=         \
        flac        \
        fontconfig  \
        freetype    \
        libdrm      \
        libevent    \
        libwebp     \
        libxml      \
        libxslt     \
        opus        \
        zlib

# Add extra flags for system libs
GN_FLAGS +=                           \
        perfetto_use_system_zlib=true \
        use_system_freetype=true      \
        use_system_lcms2=true         \
        use_system_libopenjpeg2=true  \
        use_system_zlib=true

%:
	dh $@

changelog:
	sed -e "s;@@VERSION@@;$(VERSION);g" -e "s;@@RELEASE@@;$(RELEASE);g" -e "s;@@AUTHOR@@;$(AUTHOR);g" -e "s;@@DATETIME@@;$(DATETIME);g" < $(DB_DIR)/changelog.in > $(DB_DIR)/changelog

control:
	sed -e "s;@@AUTHOR@@;$(AUTHOR);g" < $(DB_DIR)/control.in > $(DB_DIR)/control

cast_configure:
	sed -e 's@^\(enable_mdns=\)false@\1true@' -e 's@^\(enable_service_discovery=\)false@\1true@' -i $(UC_DIR)/flags.gn
	test -n "$$(grep ^enable_openscreen=true $(UC_DIR)/flags.gn)" || sed "$$ a enable_openscreen=true" -i $(UC_DIR)/flags.gn
	sed -e 's@\(.*/fix-building-without-mdns-and-service-discovery\.patch\)@#\1@' -e 's@\(.*/disable-dial-repeating-discovery\.patch\)@#\1@' -i $(UP_DIR)/series
	sed 's@^\(vanadium\/[0-9]*-disable-media-router-.*\)@#\1@' -i $(DB_DIR)/series.debian
	sed 's@^\(.*--media-router=0"\)@#\1@' < $(SH_DIR)/chromium-flags.conf > $(DB_DIR)/etc/chromium.d/chromium-flags.conf

pgo_configure:
	test -d $(RT_DIR)/chrome/build/pgo_profiles || tools/update_pgo_profiles.py --target linux update --gs-url-base=chromium-optimization-profiles/pgo_profiles
	test -n "$$(grep ^pgo_data_path $(UC_DIR)/flags.gn)" || sed "$$ a pgo_data_path=\"$$(realpath chrome/build/pgo_profiles/$$(cat chrome/build/linux.pgo.txt))\"" -i $(UC_DIR)/flags.gn
	sed -e '/^chrome\/build\/pgo_profiles/d' -i $(UC_DIR)/pruning.list

translate_configure:
	test -f $(DB_DIR)/patches/translate-reverse-enable.patch || cp -a $(SH_DIR)/translate-reverse-enable.patch $(DB_DIR)/patches/
	test -n "$$(grep ^translate-reverse-enable\.patch $(DB_DIR)/patches/series.debian)" || sed '$$ a \\ntranslate-reverse-enable.patch' -i $(DB_DIR)/patches/series.debian
	test -f $(DB_DIR)/etc/chromium.d/google-translate || cp -a $(SH_DIR)/google-translate $(DB_DIR)/etc/chromium.d/
	test -x $(DB_DIR)/ungoogled-chromium.install || sed 's@^#\(debian/etc/chromium.d/google-translate\)@\1@' < $(DB_DIR)/ungoogled-chromium.install.in > $(DB_DIR)/ungoogled-chromium.install && chmod 0700 $(DB_DIR)/ungoogled-chromium.install
	sed -e '/\/translate_manager_browsertest\.cc/d' -e '/\/translate_script\.cc/d' -e '/\/translate_util\.cc/d' -i $(UC_DIR)/domain_substitution.list

setup: changelog control pgo_configure
	if ! patch -R -p1 -s -f --dry-run < $(SH_DIR)/no-exit-if-pruned.patch >/dev/null 2>&1; then patch -p1 < $(SH_DIR)/no-exit-if-pruned.patch; fi
	sed -e '/^buildtools/d' -e '/^third_party\/depot_tools/d' -e '/^third_party\/llvm/d' -e '/^tools\/clang/d' -i $(UC_DIR)/pruning.list
	$(UL_DIR)/prune_binaries.py $(RT_DIR) $(UC_DIR)/pruning.list
	for lib in $(subst libevent,,$(subst libjpeg,libjpeg_turbo,$(SYS_LIBS))); do find "third_party/$$lib" -type f ! -path "third_party/$$lib/chromium/*" ! -path "third_party/$$lib/google/*" ! -name "*.gn" ! -name "*.gni" ! -name "*.isolate" -delete; done
	cat $(UP_DIR)/series $(DB_DIR)/patches/series.debian > $(DB_DIR)/patches/series
	test -d $(DB_DIR)/patches/core && test -d $(DB_DIR)/patches/extra || cp -a $(UP_DIR)/core $(UP_DIR)/extra $(DB_DIR)/patches/
	test -f $(DB_DIR)/ungoogled-chromium.install || cp -a $(DB_DIR)/ungoogled-chromium.install.in $(DB_DIR)/ungoogled-chromium.install
	test -f $(DB_DIR)/etc/chromium.d/chromium-flags.conf || cp -a $(SH_DIR)/chromium-flags.conf $(DB_DIR)/etc/chromium.d/
	test -n "$$(grep ^enable_openscreen=true $(UC_DIR)/flags.gn)" || sed "$$ a enable_openscreen=false" -i $(UC_DIR)/flags.gn
	# Remove some default flags from submodules/ungoogled-chromium/flags.gn
	sed -e '/^chrome_pgo_phase/d' -e '/^enable_hangout_services_extension/d' -e '/^exclude_unwind_tables/d' -e '/^google_api_key/d' -e '/^google_default_client_id/d' -e '/^google_default_client_secret/d' -i $(UC_DIR)/flags.gn
	# Remove various entries from domain_substitution.list (third_party/libwebp/BUILD.gn causes a bizarre hash mismatch error)
	sed -e '/content\/browser\/resources\/gpu\/info_view\.js/d' -e '/^third_party\/depot_tools/d' -e '/^third_party\/libwebp\/BUILD\.gn/d' -e '/^tools\/clang/d' -i $(UC_DIR)/domain_substitution.list

setup_cast: cast_configure setup
	:

setup_translate: translate_configure setup
	:

setup_cast_translate: cast_configure translate_configure setup
	:

override_dh_auto_configure:
	test -f $(DS_CACHE) && printf '%s\n' "$(DS_CACHE) exists, aborting." || $(UL_DIR)/domain_substitution.py apply -r $(UC_DIR)/domain_regex.list -f $(UC_DIR)/domain_substitution.list -c $(DS_CACHE) $(RT_DIR)
	#cp $(SH_DIR)/jsoncpp.gn build/linux/unbundle
	build/linux/unbundle/replace_gn_files.py --system-libraries $(SYS_LIBS)

override_dh_auto_build:
	gn gen $(OUT_DIR) --args="$(GN_FLAGS)" --fail-on-unused-args
	ninja -j $(JOBS) -C $(OUT_DIR) chrome chrome_sandbox chromedriver
	test ! -f out/Release/locales/en-US.pak || cp -a out/Release/locales/en-US.pak out/Release/resources/

override_dh_prep:
	for file in `find -type f -name "*.gn.orig" -o -type f -name "*.gni.orig"`; do mv $$file $${file%.orig}; done
	#rm -f build/linux/unbundle/jsoncpp.gn
	test ! -f $(DS_CACHE) || $(UL_DIR)/domain_substitution.py revert -c $(DS_CACHE) $(RT_DIR)
	dh_prep

override_dh_auto_install-arch:
	chmod 4755 out/Release/chrome_sandbox
	$(DU_DIR)/update_launcher.sh < $(SH_DIR)/chromium.sh > $(SH_DIR)/chromium

override_dh_auto_install-indep:
	test ! -f out/Release/locales/en-US.pak || rm -f out/Release/locales/en-US.pak

override_dh_fixperms:
	dh_fixperms --exclude chrome-sandbox

override_dh_auto_clean:
	rm -rf out
	find -type f -name "*.rej" -o -type f -name "*.pyc" -delete
	dh_auto_clean

override_dh_dwz:
	@echo "Skipping dwz, compiled with -fdebug-types-section instead."

override_dh_builddeb:
	dh_builddeb -- -z 9
